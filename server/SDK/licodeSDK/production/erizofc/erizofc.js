(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Erizo"] = factory();
	else
		root["Erizo"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ErizoFc.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../node_modules/base64-js/index.js":
/*!********************************************************!*\
  !*** /projects/licode/node_modules/base64-js/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://Erizo//projects/licode/node_modules/base64-js/index.js?");

/***/ }),

/***/ "../../node_modules/buffer/index.js":
/*!*****************************************************!*\
  !*** /projects/licode/node_modules/buffer/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"../../node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"../../node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"../../node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://Erizo//projects/licode/node_modules/buffer/index.js?");

/***/ }),

/***/ "../../node_modules/ieee754/index.js":
/*!******************************************************!*\
  !*** /projects/licode/node_modules/ieee754/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://Erizo//projects/licode/node_modules/ieee754/index.js?");

/***/ }),

/***/ "../../node_modules/isarray/index.js":
/*!******************************************************!*\
  !*** /projects/licode/node_modules/isarray/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack://Erizo//projects/licode/node_modules/isarray/index.js?");

/***/ }),

/***/ "../../node_modules/process/browser.js":
/*!********************************************************!*\
  !*** /projects/licode/node_modules/process/browser.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://Erizo//projects/licode/node_modules/process/browser.js?");

/***/ }),

/***/ "../../node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://Erizo/(webpack)/buildin/global.js?");

/***/ }),

/***/ "../../node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://Erizo/(webpack)/buildin/harmony-module.js?");

/***/ }),

/***/ "../common/ReliableSocket.js":
/*!***********************************!*\
  !*** ../common/ReliableSocket.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// The MIT License (MIT)\n//\n// Copyright (c) 2015-2016 Capriza Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software\n// and associated documentation files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or\n// substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n// BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nclass ReliableSocket {\n  /**\n   * socket.io guaranteed delivery socket wrapper.\n   * if the socket gets disconnected at any point,\n   * it's up to the application to set a new socket to continue\n   * handling messages.\n   * calling 'setSocket' causes all messages that have not received an ack to be sent again.\n   * @constructor\n   */\n  constructor(socket, lastAcked) {\n    this._pending = [];\n    this._events = {};\n    this._id = 0;\n    this._enabled = true;\n    this._onAckCB = this._onAck.bind(this);\n    this._onReconnectCB = this._onReconnect.bind(this);\n    this.setLastAcked(lastAcked);\n    this.setSocket(socket);\n  }\n\n  /**\n   * set the id\n   * @param id\n   */\n  setId(id) {\n    this._id = id >= 0 ? id : 0;\n  }\n\n  /**\n   * return the id\n   */\n  id() {\n    return this._id;\n  }\n\n  /**\n   * set the last message id that an ack was sent for\n   * @param lastAcked\n   */\n  setLastAcked(lastAcked) {\n    this._lastAcked = lastAcked >= 0 ? lastAcked : -1;\n  }\n\n  /**\n   * get the last acked message id\n   */\n  lastAcked() {\n    return this._lastAcked;\n  }\n\n  /**\n   * replace the underlying socket.io socket with a new socket. useful in case of a socket getting\n   * disconnected and a new socket is used to continue with the communications\n   * @param socket\n   */\n  setSocket(socket) {\n    this._cleanup();\n    this._socket = socket;\n\n    if (this._socket) {\n      // We setup all listeners again\n      Object.keys(this._events).forEach((event) => {\n        for (let i = 0; i < this._events[event].length; i += 1) {\n          this._socket.on(event, this._events[event][i].wrapped);\n        }\n      });\n      this._socket.on('reconnect', this._onReconnectCB);\n      this._socket.on('socketgd_ack', this._onAckCB);\n\n      this.sendPending();\n    }\n  }\n\n  /**\n   * send all pending messages that have not received an ack\n   */\n  sendPending() {\n    // send all pending messages that haven't been acked yet\n    this._pending.forEach((message) => {\n      this._sendOnSocket(message);\n    });\n  }\n\n  /**\n   * clear out any pending messages\n   */\n  clearPending() {\n    this._pending = [];\n  }\n\n  getNumberOfPending() {\n    return this._pending.length;\n  }\n\n  /**\n   * enable or disable sending message with gd.\n   * if disabled, then messages will be sent without guaranteeing delivery\n   * in case of socket disconnection/reconnection.\n   */\n  enable(enabled) {\n    this._enabled = enabled;\n  }\n\n  /**\n   * get the underlying socket\n   */\n  socket() {\n    return this._socket;\n  }\n\n  /**\n   * cleanup socket stuff\n   * @private\n   */\n  _cleanup() {\n    if (!this._socket) {\n      return;\n    }\n\n    this._socket.removeListener('reconnect', this._onReconnectCB);\n    this._socket.removeListener('socketgd_ack', this._onAckCB);\n    Object.keys(this._events).forEach((event) => {\n      for (let i = 0; i < this._events[event].length; i += 1) {\n        this._socket.removeListener(event, this._events[event][i].wrapped);\n      }\n    });\n  }\n\n  /**\n   * invoked when an ack arrives\n   * @param ack\n   * @private\n   */\n  _onAck(ack) {\n    // got an ack for a message, remove all messages pending\n    // an ack up to (and including) the acked message.\n    while (this._pending.length > 0 && this._pending[0].id <= ack.id) {\n      this._pending.shift();\n    }\n  }\n\n  /**\n   * invoked when an a reconnect event occurs on the underlying socket\n   * @private\n   */\n  _onReconnect() {\n    this.sendPending();\n  }\n\n  /**\n   * send an ack for a message\n   * @private\n   */\n  _sendAck(id) {\n    if (!this._socket) {\n      return undefined;\n    }\n\n    this._lastAcked = id;\n    this._socket.emit('socketgd_ack', { id });\n    return this._lastAcked;\n  }\n\n  /**\n   * send a message on the underlying socket.io socket\n   * @param message\n   * @private\n   */\n  _sendOnSocket(msg) {\n    const message = msg;\n    if (this._enabled && message.id === undefined) {\n      message.id = this._id;\n      this._id += 1;\n      message.gd = true;\n      this._pending.push(message);\n    }\n\n    if (!this._socket) {\n      return;\n    }\n\n    if (this._enabled) {\n      switch (message.type) {\n        case 'send':\n          this._socket.send(`socketgd:${message.id}:${message.msg}`, message.ack);\n          break;\n        case 'emit':\n          this._socket.emit(message.event, { socketgd: message.id, msg: message.msg }, message.ack);\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (message.type) {\n        case 'send':\n          this._socket.send(message.msg, message.ack);\n          break;\n        case 'emit':\n          this._socket.emit(message.event, message.msg, message.ack);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * send a message with gd. this means that if an ack is not received\n   * and a new connection is established (by\n   * calling setSocket), the message will be sent again.\n   * @param message\n   * @param ack\n   */\n  send(msg, ack) {\n    this._sendOnSocket({ type: 'send', msg, ack });\n  }\n\n  /**\n   * emit an event with gd. this means that if an\n   * ack is not received and a new connection is established (by\n   * calling setSocket), the event will be emitted again.\n   * @param event\n   * @param message\n   * @param ack\n   */\n  emit(event, msg, ack) {\n    this._sendOnSocket({ type: 'emit', event, msg, ack });\n  }\n\n  /**\n   * disconnect the socket\n   */\n  disconnect(close) {\n    if (this._socket) {\n      this._socket.disconnect(close);\n    }\n    this._cleanup();\n    this._socket = null;\n  }\n\n  /**\n   * disconnectSync the socket\n   */\n  disconnectSync() {\n    if (this._socket) {\n      this._socket.disconnectSync();\n    }\n    this._cleanup();\n    this._socket = null;\n  }\n\n  /**\n   * listen for events on the socket. this replaces\n   * calling the 'on' method directly on the socket.io socket.\n   * here we take care of acking messages.\n   * @param event\n   * @param cb\n   */\n  on(event, cb) {\n    this._events[event] = this._events[event] || [];\n\n    const cbData = {\n      cb,\n      wrapped: (data, ack) => {\n        if (data && event === 'message') {\n          // parse the message\n          if (data.indexOf('socketgd:') !== 0) {\n            cb(data, ack);\n            return;\n          }\n          // get the id (skipping the socketgd prefix)\n          const index = data.indexOf(':', 9);\n          if (index === -1) {\n            cb(data, ack);\n            return;\n          }\n\n          const id = parseInt(data.substring(9, index), 10);\n          if (id <= this._lastAcked) {\n            // discard the message since it was already handled and acked\n            return;\n          }\n\n          const message = data.substring(index + 1);\n          // the callback must call the 'ack' function so we can send an ack for the message\n          if (cb) {\n            try {\n              cb(message, ack);\n            } catch (e) {\n              // TODO(javier): print an error\n            }\n          }\n          this._sendAck(id);\n        } else if (data && typeof data === 'object' && data.socketgd !== undefined) {\n          if (data.socketgd <= this._lastAcked) {\n            // discard the message since it was already handled and acked\n            return;\n          }\n          if (cb) {\n            try {\n              cb(data.msg, ack);\n            } catch (e) {\n              // TODO(javier): print an error\n            }\n          }\n          this._sendAck(data.socketgd);\n        } else {\n          cb(data, ack);\n        }\n      },\n    };\n\n    this._events[event].push(cbData);\n\n    if (this._socket) {\n      this._socket.on(event, cbData.wrapped);\n    }\n  }\n\n  /**\n   * remove a previously set callback for the specified event\n   */\n  off(event, cb) {\n    if (!this._events[event]) {\n      return;\n    }\n\n    // find the callback to remove\n    for (let i = 0; i < this._events[event].length; i += 1) {\n      if (this._events[event][i].cb === cb) {\n        if (this._socket) {\n          this._socket.removeListener(event, this._events[event][i].wrapped);\n        }\n        this._events[event].splice(i, 1);\n      }\n    }\n  }\n}\n\nmodule.exports = { ReliableSocket };\n\n\n\n//# sourceURL=webpack://Erizo/../common/ReliableSocket.js?");

/***/ }),

/***/ "../node_modules/after/index.js":
/*!**************************************!*\
  !*** ../node_modules/after/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/after/index.js?");

/***/ }),

/***/ "../node_modules/arraybuffer.slice/index.js":
/*!**************************************************!*\
  !*** ../node_modules/arraybuffer.slice/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/arraybuffer.slice/index.js?");

/***/ }),

/***/ "../node_modules/backo2/index.js":
/*!***************************************!*\
  !*** ../node_modules/backo2/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n//# sourceURL=webpack://Erizo/../node_modules/backo2/index.js?");

/***/ }),

/***/ "../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":
/*!********************************************************************!*\
  !*** ../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n\n//# sourceURL=webpack://Erizo/../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js?");

/***/ }),

/***/ "../node_modules/blob/index.js":
/*!*************************************!*\
  !*** ../node_modules/blob/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n\n\n//# sourceURL=webpack://Erizo/../node_modules/blob/index.js?");

/***/ }),

/***/ "../node_modules/component-bind/index.js":
/*!***********************************************!*\
  !*** ../node_modules/component-bind/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/component-bind/index.js?");

/***/ }),

/***/ "../node_modules/component-emitter/index.js":
/*!**************************************************!*\
  !*** ../node_modules/component-emitter/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack://Erizo/../node_modules/component-emitter/index.js?");

/***/ }),

/***/ "../node_modules/component-inherit/index.js":
/*!**************************************************!*\
  !*** ../node_modules/component-inherit/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n//# sourceURL=webpack://Erizo/../node_modules/component-inherit/index.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/globalThis.browser.js":
/*!******************************************************************!*\
  !*** ../node_modules/engine.io-client/lib/globalThis.browser.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = (function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')(); // eslint-disable-line no-new-func\n  }\n})();\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/globalThis.browser.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/engine.io-client/lib/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nmodule.exports = __webpack_require__(/*! ./socket */ \"../node_modules/engine.io-client/lib/socket.js\");\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = __webpack_require__(/*! engine.io-parser */ \"../node_modules/engine.io-parser/lib/browser.js\");\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/index.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/socket.js":
/*!******************************************************!*\
  !*** ../node_modules/engine.io-client/lib/socket.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar transports = __webpack_require__(/*! ./transports/index */ \"../node_modules/engine.io-client/lib/transports/index.js\");\nvar Emitter = __webpack_require__(/*! component-emitter */ \"../node_modules/component-emitter/index.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:socket');\nvar index = __webpack_require__(/*! indexof */ \"../node_modules/indexof/index.js\");\nvar parser = __webpack_require__(/*! engine.io-parser */ \"../node_modules/engine.io-parser/lib/browser.js\");\nvar parseuri = __webpack_require__(/*! parseuri */ \"../node_modules/parseuri/index.js\");\nvar parseqs = __webpack_require__(/*! parseqs */ \"../node_modules/parseqs/index.js\");\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || undefined;\n  this.key = opts.key || undefined;\n  this.passphrase = opts.passphrase || undefined;\n  this.cert = opts.cert || undefined;\n  this.ca = opts.ca || undefined;\n  this.ciphers = opts.ciphers || undefined;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = __webpack_require__(/*! ./transport */ \"../node_modules/engine.io-client/lib/transport.js\");\nSocket.transports = __webpack_require__(/*! ./transports/index */ \"../node_modules/engine.io-client/lib/transports/index.js\");\nSocket.parser = __webpack_require__(/*! engine.io-parser */ \"../node_modules/engine.io-parser/lib/browser.js\");\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0),\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/socket.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/transport.js":
/*!*********************************************************!*\
  !*** ../node_modules/engine.io-client/lib/transport.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(/*! engine.io-parser */ \"../node_modules/engine.io-parser/lib/browser.js\");\nvar Emitter = __webpack_require__(/*! component-emitter */ \"../node_modules/component-emitter/index.js\");\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/transport.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/transports/index.js":
/*!****************************************************************!*\
  !*** ../node_modules/engine.io-client/lib/transports/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"../node_modules/engine.io-client/lib/xmlhttprequest.js\");\nvar XHR = __webpack_require__(/*! ./polling-xhr */ \"../node_modules/engine.io-client/lib/transports/polling-xhr.js\");\nvar JSONP = __webpack_require__(/*! ./polling-jsonp */ \"../node_modules/engine.io-client/lib/transports/polling-jsonp.js\");\nvar websocket = __webpack_require__(/*! ./websocket */ \"../node_modules/engine.io-client/lib/transports/websocket.js\");\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/transports/index.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/transports/polling-jsonp.js":
/*!************************************************************************!*\
  !*** ../node_modules/engine.io-client/lib/transports/polling-jsonp.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module requirements.\n */\n\nvar Polling = __webpack_require__(/*! ./polling */ \"../node_modules/engine.io-client/lib/transports/polling.js\");\nvar inherit = __webpack_require__(/*! component-inherit */ \"../node_modules/component-inherit/index.js\");\nvar globalThis = __webpack_require__(/*! ../globalThis */ \"../node_modules/engine.io-client/lib/globalThis.browser.js\");\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    callbacks = globalThis.___eio = (globalThis.___eio || []);\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/transports/polling-jsonp.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/transports/polling-xhr.js":
/*!**********************************************************************!*\
  !*** ../node_modules/engine.io-client/lib/transports/polling-xhr.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"../node_modules/engine.io-client/lib/xmlhttprequest.js\");\nvar Polling = __webpack_require__(/*! ./polling */ \"../node_modules/engine.io-client/lib/transports/polling.js\");\nvar Emitter = __webpack_require__(/*! component-emitter */ \"../node_modules/component-emitter/index.js\");\nvar inherit = __webpack_require__(/*! component-inherit */ \"../node_modules/component-inherit/index.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:polling-xhr');\nvar globalThis = __webpack_require__(/*! ../globalThis */ \"../node_modules/engine.io-client/lib/globalThis.browser.js\");\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/transports/polling-xhr.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/transports/polling.js":
/*!******************************************************************!*\
  !*** ../node_modules/engine.io-client/lib/transports/polling.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(/*! ../transport */ \"../node_modules/engine.io-client/lib/transport.js\");\nvar parseqs = __webpack_require__(/*! parseqs */ \"../node_modules/parseqs/index.js\");\nvar parser = __webpack_require__(/*! engine.io-parser */ \"../node_modules/engine.io-parser/lib/browser.js\");\nvar inherit = __webpack_require__(/*! component-inherit */ \"../node_modules/component-inherit/index.js\");\nvar yeast = __webpack_require__(/*! yeast */ \"../node_modules/yeast/index.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"../node_modules/engine.io-client/lib/xmlhttprequest.js\");\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState && packet.type === 'open') {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/transports/polling.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/transports/websocket.js":
/*!********************************************************************!*\
  !*** ../node_modules/engine.io-client/lib/transports/websocket.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(/*! ../transport */ \"../node_modules/engine.io-client/lib/transport.js\");\nvar parser = __webpack_require__(/*! engine.io-parser */ \"../node_modules/engine.io-parser/lib/browser.js\");\nvar parseqs = __webpack_require__(/*! parseqs */ \"../node_modules/parseqs/index.js\");\nvar inherit = __webpack_require__(/*! component-inherit */ \"../node_modules/component-inherit/index.js\");\nvar yeast = __webpack_require__(/*! yeast */ \"../node_modules/yeast/index.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = __webpack_require__(/*! ws */ 0);\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n\n  var opts = {};\n\n  if (!this.isReactNative) {\n    opts.agent = this.agent;\n    opts.perMessageDeflate = this.perMessageDeflate;\n\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/buffer/index.js */ \"../../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/transports/websocket.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/lib/xmlhttprequest.js":
/*!**************************************************************!*\
  !*** ../node_modules/engine.io-client/lib/xmlhttprequest.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// browser shim for xmlhttprequest module\n\nvar hasCORS = __webpack_require__(/*! has-cors */ \"../node_modules/has-cors/index.js\");\nvar globalThis = __webpack_require__(/*! ./globalThis */ \"../node_modules/engine.io-client/lib/globalThis.browser.js\");\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/lib/xmlhttprequest.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/node_modules/debug/src/browser.js":
/*!**************************************************************************!*\
  !*** ../node_modules/engine.io-client/node_modules/debug/src/browser.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/engine.io-client/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../node_modules/process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "../node_modules/engine.io-client/node_modules/debug/src/debug.js":
/*!************************************************************************!*\
  !*** ../node_modules/engine.io-client/node_modules/debug/src/debug.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"../node_modules/ms/index.js\");\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-client/node_modules/debug/src/debug.js?");

/***/ }),

/***/ "../node_modules/engine.io-parser/lib/browser.js":
/*!*******************************************************!*\
  !*** ../node_modules/engine.io-parser/lib/browser.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar keys = __webpack_require__(/*! ./keys */ \"../node_modules/engine.io-parser/lib/keys.js\");\nvar hasBinary = __webpack_require__(/*! has-binary2 */ \"../node_modules/has-binary2/index.js\");\nvar sliceBuffer = __webpack_require__(/*! arraybuffer.slice */ \"../node_modules/arraybuffer.slice/index.js\");\nvar after = __webpack_require__(/*! after */ \"../node_modules/after/index.js\");\nvar utf8 = __webpack_require__(/*! ./utf8 */ \"../node_modules/engine.io-parser/lib/utf8.js\");\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = __webpack_require__(/*! base64-arraybuffer */ \"../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\");\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = __webpack_require__(/*! blob */ \"../node_modules/blob/index.js\");\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-parser/lib/browser.js?");

/***/ }),

/***/ "../node_modules/engine.io-parser/lib/keys.js":
/*!****************************************************!*\
  !*** ../node_modules/engine.io-parser/lib/keys.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-parser/lib/keys.js?");

/***/ }),

/***/ "../node_modules/engine.io-parser/lib/utf8.js":
/*!****************************************************!*\
  !*** ../node_modules/engine.io-parser/lib/utf8.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/engine.io-parser/lib/utf8.js?");

/***/ }),

/***/ "../node_modules/has-binary2/index.js":
/*!********************************************!*\
  !*** ../node_modules/has-binary2/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = __webpack_require__(/*! isarray */ \"../node_modules/has-binary2/node_modules/isarray/index.js\");\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/buffer/index.js */ \"../../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://Erizo/../node_modules/has-binary2/index.js?");

/***/ }),

/***/ "../node_modules/has-binary2/node_modules/isarray/index.js":
/*!*****************************************************************!*\
  !*** ../node_modules/has-binary2/node_modules/isarray/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/has-binary2/node_modules/isarray/index.js?");

/***/ }),

/***/ "../node_modules/has-cors/index.js":
/*!*****************************************!*\
  !*** ../node_modules/has-cors/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/has-cors/index.js?");

/***/ }),

/***/ "../node_modules/indexof/index.js":
/*!****************************************!*\
  !*** ../node_modules/indexof/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n//# sourceURL=webpack://Erizo/../node_modules/indexof/index.js?");

/***/ }),

/***/ "../node_modules/ms/index.js":
/*!***********************************!*\
  !*** ../node_modules/ms/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/ms/index.js?");

/***/ }),

/***/ "../node_modules/parseqs/index.js":
/*!****************************************!*\
  !*** ../node_modules/parseqs/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/parseqs/index.js?");

/***/ }),

/***/ "../node_modules/parseuri/index.js":
/*!*****************************************!*\
  !*** ../node_modules/parseuri/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/parseuri/index.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/lib/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/socket.io-client/lib/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * Module dependencies.\n */\n\nvar url = __webpack_require__(/*! ./url */ \"../node_modules/socket.io-client/lib/url.js\");\nvar parser = __webpack_require__(/*! socket.io-parser */ \"../node_modules/socket.io-client/node_modules/socket.io-parser/index.js\");\nvar Manager = __webpack_require__(/*! ./manager */ \"../node_modules/socket.io-client/lib/manager.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = __webpack_require__(/*! ./manager */ \"../node_modules/socket.io-client/lib/manager.js\");\nexports.Socket = __webpack_require__(/*! ./socket */ \"../node_modules/socket.io-client/lib/socket.js\");\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/lib/index.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/lib/manager.js":
/*!*******************************************************!*\
  !*** ../node_modules/socket.io-client/lib/manager.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * Module dependencies.\n */\n\nvar eio = __webpack_require__(/*! engine.io-client */ \"../node_modules/engine.io-client/lib/index.js\");\nvar Socket = __webpack_require__(/*! ./socket */ \"../node_modules/socket.io-client/lib/socket.js\");\nvar Emitter = __webpack_require__(/*! component-emitter */ \"../node_modules/component-emitter/index.js\");\nvar parser = __webpack_require__(/*! socket.io-parser */ \"../node_modules/socket.io-client/node_modules/socket.io-parser/index.js\");\nvar on = __webpack_require__(/*! ./on */ \"../node_modules/socket.io-client/lib/on.js\");\nvar bind = __webpack_require__(/*! component-bind */ \"../node_modules/component-bind/index.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:manager');\nvar indexOf = __webpack_require__(/*! indexof */ \"../node_modules/indexof/index.js\");\nvar Backoff = __webpack_require__(/*! backo2 */ \"../node_modules/backo2/index.js\");\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    if (timeout === 0) {\n      openSub.destroy(); // prevents a race condition with the 'open' event\n    }\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/lib/manager.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/lib/on.js":
/*!**************************************************!*\
  !*** ../node_modules/socket.io-client/lib/on.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/lib/on.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/lib/socket.js":
/*!******************************************************!*\
  !*** ../node_modules/socket.io-client/lib/socket.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(/*! socket.io-parser */ \"../node_modules/socket.io-client/node_modules/socket.io-parser/index.js\");\nvar Emitter = __webpack_require__(/*! component-emitter */ \"../node_modules/component-emitter/index.js\");\nvar toArray = __webpack_require__(/*! to-array */ \"../node_modules/to-array/index.js\");\nvar on = __webpack_require__(/*! ./on */ \"../node_modules/socket.io-client/lib/on.js\");\nvar bind = __webpack_require__(/*! component-bind */ \"../node_modules/component-bind/index.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:socket');\nvar parseqs = __webpack_require__(/*! parseqs */ \"../node_modules/parseqs/index.js\");\nvar hasBin = __webpack_require__(/*! has-binary2 */ \"../node_modules/has-binary2/index.js\");\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  if (!this.io.reconnecting) this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/lib/socket.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/lib/url.js":
/*!***************************************************!*\
  !*** ../node_modules/socket.io-client/lib/url.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * Module dependencies.\n */\n\nvar parseuri = __webpack_require__(/*! parseuri */ \"../node_modules/parseuri/index.js\");\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/lib/url.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/node_modules/debug/src/browser.js":
/*!**************************************************************************!*\
  !*** ../node_modules/socket.io-client/node_modules/debug/src/browser.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/socket.io-client/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../node_modules/process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/node_modules/debug/src/debug.js":
/*!************************************************************************!*\
  !*** ../node_modules/socket.io-client/node_modules/debug/src/debug.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"../node_modules/ms/index.js\");\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/node_modules/debug/src/debug.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/node_modules/isarray/index.js":
/*!**********************************************************************!*\
  !*** ../node_modules/socket.io-client/node_modules/isarray/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/node_modules/isarray/index.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/node_modules/socket.io-parser/binary.js":
/*!********************************************************************************!*\
  !*** ../node_modules/socket.io-client/node_modules/socket.io-parser/binary.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = __webpack_require__(/*! isarray */ \"../node_modules/socket.io-client/node_modules/isarray/index.js\");\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"../node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js\");\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/node_modules/socket.io-parser/binary.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/node_modules/socket.io-parser/index.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/socket.io-client/node_modules/socket.io-parser/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * Module dependencies.\n */\n\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-parser');\nvar Emitter = __webpack_require__(/*! component-emitter */ \"../node_modules/component-emitter/index.js\");\nvar binary = __webpack_require__(/*! ./binary */ \"../node_modules/socket.io-client/node_modules/socket.io-parser/binary.js\");\nvar isArray = __webpack_require__(/*! isarray */ \"../node_modules/socket.io-client/node_modules/isarray/index.js\");\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"../node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js\");\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var start = i + 1;\n    while (str.charAt(++i) !== '-' && i != str.length) {}\n    var buf = str.substring(start, i);\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    var start = i + 1;\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      if (i === str.length) break;\n    }\n    p.nsp = str.substring(start, i);\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    var start = i + 1;\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      if (i === str.length) break;\n    }\n    p.id = Number(str.substring(start, i + 1));\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/node_modules/socket.io-parser/index.js?");

/***/ }),

/***/ "../node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/buffer/index.js */ \"../../node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://Erizo/../node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js?");

/***/ }),

/***/ "../node_modules/to-array/index.js":
/*!*****************************************!*\
  !*** ../node_modules/to-array/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n//# sourceURL=webpack://Erizo/../node_modules/to-array/index.js?");

/***/ }),

/***/ "../node_modules/yeast/index.js":
/*!**************************************!*\
  !*** ../node_modules/yeast/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n//# sourceURL=webpack://Erizo/../node_modules/yeast/index.js?");

/***/ }),

/***/ "./src/ErizoConnectionManager.js":
/*!***************************************!*\
  !*** ./src/ErizoConnectionManager.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _webrtc_stacks_ChromeStableStack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webrtc-stacks/ChromeStableStack */ \"./src/webrtc-stacks/ChromeStableStack.js\");\n/* harmony import */ var _webrtc_stacks_SafariStack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webrtc-stacks/SafariStack */ \"./src/webrtc-stacks/SafariStack.js\");\n/* harmony import */ var _webrtc_stacks_FirefoxStack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webrtc-stacks/FirefoxStack */ \"./src/webrtc-stacks/FirefoxStack.js\");\n/* harmony import */ var _webrtc_stacks_FcStack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./webrtc-stacks/FcStack */ \"./src/webrtc-stacks/FcStack.js\");\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Logger */ \"./src/utils/Logger.js\");\n/* harmony import */ var _Events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Events */ \"./src/Events.js\");\n/* harmony import */ var _utils_ErizoMap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/ErizoMap */ \"./src/utils/ErizoMap.js\");\n/* harmony import */ var _utils_ConnectionHelpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/ConnectionHelpers */ \"./src/utils/ConnectionHelpers.js\");\n/* global */\n\n\n\n\n\n\n\n\n\nconst EventEmitterConst = _Events__WEBPACK_IMPORTED_MODULE_5__[\"EventEmitter\"]; // makes google-closure-compiler happy\nlet ErizoSessionId = 103;\n\nconst QUALITY_LEVEL_GOOD = 'good';\nconst QUALITY_LEVEL_LOW_PACKET_LOSSES = 'low-packet-losses';\nconst QUALITY_LEVEL_HIGH_PACKET_LOSSES = 'high-packet-losses';\n\nconst QUALITY_LEVELS = [\n  QUALITY_LEVEL_HIGH_PACKET_LOSSES,\n  QUALITY_LEVEL_LOW_PACKET_LOSSES,\n  QUALITY_LEVEL_GOOD,\n];\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_4__[\"default\"].module('ErizoConnection');\n\nclass ErizoConnection extends EventEmitterConst {\n  constructor(specInput, erizoId = undefined) {\n    super();\n    this.stack = {};\n\n    this.erizoId = erizoId;\n    this.streamsMap = Object(_utils_ErizoMap__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(); // key:streamId, value: stream\n\n    const spec = specInput;\n    ErizoSessionId += 1;\n    spec.sessionId = ErizoSessionId;\n    this.sessionId = ErizoSessionId;\n    this.connectionId = spec.connectionId;\n    this.disableIceRestart = spec.disableIceRestart;\n    this.qualityLevel = QUALITY_LEVEL_GOOD;\n    this.wasAbleToConnect = false;\n\n    log.debug(`message: Building a new Connection, ${this.toLog()}`);\n    spec.onEnqueueingTimeout = (step) => {\n      const message = `Timeout in ${step}`;\n      this._onConnectionFailed(message);\n    };\n\n    if (!spec.streamRemovedListener) {\n      spec.streamRemovedListener = () => {};\n    }\n    this.streamRemovedListener = spec.streamRemovedListener;\n\n    // Check which WebRTC Stack is installed.\n    this.browser = _utils_ConnectionHelpers__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getBrowser();\n    if (this.browser === 'fake') {\n      log.warning(`message: Publish/subscribe video/audio streams not supported in erizofc yet, ${this.toLog()}`);\n      this.stack = Object(_webrtc_stacks_FcStack__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(spec);\n    } else if (this.browser === 'mozilla') {\n      log.debug(`message: Firefox Stack, ${this.toLog()}`);\n      this.stack = Object(_webrtc_stacks_FirefoxStack__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(spec);\n    } else if (this.browser === 'safari') {\n      log.debug(`message: Safari Stack, ${this.toLog()}`);\n      this.stack = Object(_webrtc_stacks_SafariStack__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(spec);\n    } else if (this.browser === 'chrome-stable' || this.browser === 'electron') {\n      log.debug(`message: Chrome Stable Stack, ${this.toLog()}`);\n      this.stack = Object(_webrtc_stacks_ChromeStableStack__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(spec);\n    } else {\n      log.error(`message: No stack available for this browser, ${this.toLog()}`);\n      throw new Error('WebRTC stack not available');\n    }\n    if (!this.stack.updateSpec) {\n      this.stack.updateSpec = (newSpec, callback = () => {}) => {\n        log.error(`message: Update Configuration not implemented in this browser, ${this.toLog()}`);\n        callback('unimplemented');\n      };\n    }\n    if (!this.stack.setSignallingCallback) {\n      this.stack.setSignallingCallback = () => {\n        log.error(`message: setSignallingCallback is not implemented in this stack, ${this.toLog()}`);\n      };\n    }\n\n    // PeerConnection Events\n    if (this.stack.peerConnection) {\n      this.peerConnection = this.stack.peerConnection; // For backwards compatibility\n      this.stack.peerConnection.onaddstream = (evt) => {\n        this.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_5__[\"ConnectionEvent\"])({ type: 'add-stream', stream: evt.stream }));\n      };\n\n      this.stack.peerConnection.onremovestream = (evt) => {\n        this.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_5__[\"ConnectionEvent\"])({ type: 'remove-stream', stream: evt.stream }));\n        this.streamRemovedListener(evt.stream.id);\n      };\n\n      this.stack.peerConnection.oniceconnectionstatechange = () => {\n        const state = this.stack.peerConnection.iceConnectionState;\n        if (['completed', 'connected'].indexOf(state) !== -1) {\n          this.wasAbleToConnect = true;\n        }\n        if (state === 'failed' && this.wasAbleToConnect && !this.disableIceRestart) {\n          log.warning(`message: Restarting ICE, ${this.toLog()}`);\n          this.stack.restartIce();\n          return;\n        }\n        this.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_5__[\"ConnectionEvent\"])({ type: 'ice-state-change', state, wasAbleToConnect: this.wasAbleToConnect }));\n      };\n    }\n  }\n\n  toLog() {\n    return `connectionId: ${this.connectionId}, sessionId: ${this.sessionId}, qualityLevel: ${this.qualityLevel}, erizoId: ${this.erizoId}`;\n  }\n\n  _onConnectionFailed(message) {\n    log.warning(`Connection Failed, message: ${message}, ${this.toLog()}`);\n    this.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_5__[\"ConnectionEvent\"])({ type: 'connection-failed', connection: this, message }));\n  }\n\n  close() {\n    log.debug(`message: Closing ErizoConnection, ${this.toLog()}`);\n    this.streamsMap.clear();\n    this.stack.close();\n  }\n\n  addStream(stream) {\n    log.debug(`message: Adding stream to Connection, ${this.toLog()}, ${stream.toLog()}`);\n    this.streamsMap.add(stream.getID(), stream);\n    if (stream.local) {\n      this.stack.addStream(stream);\n    }\n  }\n\n  removeStream(stream) {\n    const streamId = stream.getID();\n    if (!this.streamsMap.has(streamId)) {\n      log.debug(`message: Cannot remove stream not in map, ${this.toLog()}, ${stream.toLog()}`);\n      return;\n    }\n    this.streamsMap.remove(streamId);\n    if (stream.local) {\n      this.stack.removeStream(stream.stream);\n    } else if (this.streamsMap.size() === 0) {\n      this.streamRemovedListener(stream.getLabel());\n    }\n  }\n\n  processSignalingMessage(msg) {\n    if (msg.type === 'failed') {\n      const message = 'Ice Connection failure detected in server';\n      this._onConnectionFailed(message);\n      return;\n    }\n    this.stack.processSignalingMessage(msg);\n  }\n\n  sendSignalingMessage(msg) {\n    this.stack.sendSignalingMessage(msg);\n  }\n\n  updateSpec(configInput, streamId, callback) {\n    this.stack.updateSpec(configInput, streamId, callback);\n  }\n\n  setQualityLevel(level) {\n    this.qualityLevel = QUALITY_LEVELS[level];\n  }\n\n  getQualityLevel() {\n    return { message: this.qualityLevel, index: QUALITY_LEVELS.indexOf(this.qualityLevel) };\n  }\n}\n\nclass ErizoConnectionManager {\n  constructor() {\n    this.ErizoConnectionsMap = new Map(); // key: erizoId, value: {connectionId: connection}\n  }\n\n  getErizoConnection(erizoConnectionId) {\n    let connection;\n    this.ErizoConnectionsMap.forEach((entry) => {\n      Object.keys(entry).forEach((entryKey) => {\n        if (entry[entryKey].connectionId === erizoConnectionId) {\n          connection = entry[entryKey];\n        }\n      });\n    });\n    return connection;\n  }\n\n  getOrBuildErizoConnection(specInput, erizoId = undefined, singlePC = false) {\n    log.debug(`message: getOrBuildErizoConnection, erizoId: ${erizoId}, singlePC: ${singlePC}`);\n    let connection = {};\n    const type = specInput.isRemote ? 'subscribe' : 'publish';\n\n    if (erizoId === undefined) {\n      // we have no erizoJS id - p2p\n      return new ErizoConnection(specInput);\n    }\n    if (singlePC) {\n      let connectionEntry;\n      if (this.ErizoConnectionsMap.has(erizoId)) {\n        connectionEntry = this.ErizoConnectionsMap.get(erizoId);\n      } else {\n        connectionEntry = {};\n        this.ErizoConnectionsMap.set(erizoId, connectionEntry);\n      }\n      if (!connectionEntry[`single-pc-${type}`]) {\n        connectionEntry[`single-pc-${type}`] = new ErizoConnection(specInput, erizoId);\n      }\n      connection = connectionEntry[`single-pc-${type}`];\n    } else {\n      connection = new ErizoConnection(specInput, erizoId);\n      if (this.ErizoConnectionsMap.has(erizoId)) {\n        this.ErizoConnectionsMap.get(erizoId)[connection.sessionId] = connection;\n      } else {\n        const connectionEntry = {};\n        connectionEntry[connection.sessionId] = connection;\n        this.ErizoConnectionsMap.set(erizoId, connectionEntry);\n      }\n    }\n    return connection;\n  }\n\n  maybeCloseConnection(connection, force = false) {\n    log.debug(`message: Trying to remove connection, ${connection.toLog()}`);\n    if (connection.streamsMap.size() === 0 || force) {\n      log.debug(`message: No streams in connection, ${connection.toLog()}`);\n      const peerConnection = this.ErizoConnectionsMap.get(connection.erizoId);\n      if (peerConnection !== undefined) {\n        if ((peerConnection['single-pc-publish'] || peerConnection['single-pc-subscribe']) && !force) {\n          log.debug(`message: Will not remove empty connection, ${connection.toLog()}, reason: It is singlePC`);\n          return;\n        }\n      }\n      connection.close();\n      if (peerConnection !== undefined) {\n        delete peerConnection['single-pc-subscribe'];\n        delete peerConnection['single-pc-publish'];\n        delete peerConnection[connection.sessionId];\n      }\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ErizoConnectionManager);\n\n\n//# sourceURL=webpack://Erizo/./src/ErizoConnectionManager.js?");

/***/ }),

/***/ "./src/ErizoFc.js":
/*!************************!*\
  !*** ./src/ErizoFc.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Room__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Room */ \"./src/Room.js\");\n/* harmony import */ var _Events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Events */ \"./src/Events.js\");\n/* harmony import */ var _Stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Stream */ \"./src/Stream.js\");\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Logger */ \"./src/utils/Logger.js\");\n\n\n\n\n// Using script-loader to load global variables\n\nconst Erizo = {\n  Room: _Room__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  LicodeEvent: _Events__WEBPACK_IMPORTED_MODULE_1__[\"LicodeEvent\"],\n  RoomEvent: _Events__WEBPACK_IMPORTED_MODULE_1__[\"RoomEvent\"],\n  StreamEvent: _Events__WEBPACK_IMPORTED_MODULE_1__[\"StreamEvent\"],\n  Stream: _Stream__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  Logger: _utils_Logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Erizo);\n\n\n//# sourceURL=webpack://Erizo/./src/ErizoFc.js?");

/***/ }),

/***/ "./src/Events.js":
/*!***********************!*\
  !*** ./src/Events.js ***!
  \***********************/
/*! exports provided: EventDispatcher, EventEmitter, LicodeEvent, RoomEvent, StreamEvent, PublisherEvent, ConnectionEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventDispatcher\", function() { return EventDispatcher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventEmitter\", function() { return EventEmitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LicodeEvent\", function() { return LicodeEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoomEvent\", function() { return RoomEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StreamEvent\", function() { return StreamEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PublisherEvent\", function() { return PublisherEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionEvent\", function() { return ConnectionEvent; });\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/Logger */ \"./src/utils/Logger.js\");\n/* global */\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].module('EventDispatcher');\n/*\n * Class EventDispatcher provides event handling to sub-classes.\n * It is inherited from Publisher, Room, etc.\n */\nconst EventDispatcher = () => {\n  const that = {};\n  // Private vars\n  const dispatcher = {\n    eventListeners: {},\n  };\n\n  // Public functions\n\n  // It adds an event listener attached to an event type.\n  that.addEventListener = (eventType, listener) => {\n    if (dispatcher.eventListeners[eventType] === undefined) {\n      dispatcher.eventListeners[eventType] = [];\n    }\n    dispatcher.eventListeners[eventType].push(listener);\n  };\n\n  // It removes an available event listener.\n  that.removeEventListener = (eventType, listener) => {\n    if (!dispatcher.eventListeners[eventType]) {\n      return;\n    }\n    const index = dispatcher.eventListeners[eventType].indexOf(listener);\n    if (index !== -1) {\n      dispatcher.eventListeners[eventType].splice(index, 1);\n    }\n  };\n\n  // It removes all listeners\n  that.removeAllListeners = () => {\n    dispatcher.eventListeners = {};\n  };\n\n  // It dispatch a new event to the event listeners, based on the type\n  // of event. All events are intended to be LicodeEvents.\n  that.dispatchEvent = (event) => {\n    if (!event || !event.type) {\n      throw new Error('Undefined event');\n    }\n    let listeners = dispatcher.eventListeners[event.type] || [];\n    listeners = listeners.slice(0);\n    for (let i = 0; i < listeners.length; i += 1) {\n      try {\n        listeners[i](event);\n      } catch (e) {\n        log.info(`Error triggering event: ${event.type}, error: ${e}`);\n      }\n    }\n  };\n\n  that.on = that.addEventListener;\n  that.off = that.removeEventListener;\n  that.emit = that.dispatchEvent;\n\n  return that;\n};\n\nclass EventEmitter {\n  constructor() {\n    this.emitter = EventDispatcher();\n  }\n  addEventListener(eventType, listener) {\n    this.emitter.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.emitter.removeEventListener(eventType, listener);\n  }\n  dispatchEvent(evt) {\n    this.emitter.dispatchEvent(evt);\n  }\n  on(eventType, listener) {\n    this.addEventListener(eventType, listener);\n  }\n  off(eventType, listener) {\n    this.removeEventListener(eventType, listener);\n  }\n  emit(evt) {\n    this.dispatchEvent(evt);\n  }\n}\n\n\n// **** EVENTS ****\n\n/*\n * Class LicodeEvent represents a generic Event in the library.\n * It handles the type of event, that is important when adding\n * event listeners to EventDispatchers and dispatching new events.\n * A LicodeEvent can be initialized this way:\n * var event = LicodeEvent({type: \"room-connected\"});\n */\nconst LicodeEvent = (spec) => {\n  const that = {};\n\n  // Event type. Examples are: 'room-connected', 'stream-added', etc.\n  that.type = spec.type;\n\n  return that;\n};\n\n/*\n * Class ConnectionEvent represents an Event that happens in a Room. It is a\n * LicodeEvent.\n * It is usually initialized as:\n * var roomEvent = ConnectionEvent({type:\"stream-added\", stream:stream1, state:state});\n * Event types:\n * 'stream-added' - a stream has been added to the connection.\n * 'stream-removed' - a stream has been removed from the connection.\n * 'ice-state-change' - ICE state changed\n * 'connection-failed' - Connection Failed\n */\nconst ConnectionEvent = (spec) => {\n  const that = LicodeEvent(spec);\n\n  that.stream = spec.stream;\n  that.connection = spec.connection;\n  that.state = spec.state;\n  that.message = spec.message;\n  that.wasAbleToConnect = spec.wasAbleToConnect;\n\n  return that;\n};\n\n/*\n * Class RoomEvent represents an Event that happens in a Room. It is a\n * LicodeEvent.\n * It is usually initialized as:\n * var roomEvent = RoomEvent({type:\"room-connected\", streams:[stream1, stream2]});\n * Event types:\n * 'room-connected' - points out that the user has been successfully connected to the room.\n * 'room-disconnected' - shows that the user has been already disconnected.\n * 'quality-level' - Connection Quality Level\n */\nconst RoomEvent = (spec) => {\n  const that = LicodeEvent(spec);\n\n  // A list with the streams that are published in the room.\n  that.streams = spec.streams;\n  that.message = spec.message;\n\n  return that;\n};\n\n/*\n * Class StreamEvent represents an event related to a stream. It is a LicodeEvent.\n * It is usually initialized this way:\n * var streamEvent = StreamEvent({type:\"stream-added\", stream:stream1});\n * Event types:\n * 'stream-added' - indicates that there is a new stream available in the room.\n * 'stream-removed' - shows that a previous available stream has been removed from the room.\n */\nconst StreamEvent = (spec) => {\n  const that = LicodeEvent(spec);\n\n  // The stream related to this event.\n  that.stream = spec.stream;\n\n  that.msg = spec.msg;\n  that.origin = spec.origin;\n  that.bandwidth = spec.bandwidth;\n  that.attrs = spec.attrs;\n  that.wasAbleToConnect = spec.wasAbleToConnect;\n\n  return that;\n};\n\n/*\n * Class PublisherEvent represents an event related to a publisher. It is a LicodeEvent.\n * It usually initializes as:\n * var publisherEvent = PublisherEvent({})\n * Event types:\n * 'access-accepted' - indicates that the user has accepted to share his camera and microphone\n */\nconst PublisherEvent = (spec) => {\n  const that = LicodeEvent(spec);\n\n  return that;\n};\n\n\n\n\n//# sourceURL=webpack://Erizo/./src/Events.js?");

/***/ }),

/***/ "./src/Room.js":
/*!*********************!*\
  !*** ./src/Room.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ErizoConnectionManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ErizoConnectionManager */ \"./src/ErizoConnectionManager.js\");\n/* harmony import */ var _utils_ConnectionHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/ConnectionHelpers */ \"./src/utils/ConnectionHelpers.js\");\n/* harmony import */ var _Events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Events */ \"./src/Events.js\");\n/* harmony import */ var _Socket__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Socket */ \"./src/Socket.js\");\n/* harmony import */ var _Stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Stream */ \"./src/Stream.js\");\n/* harmony import */ var _utils_ErizoMap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/ErizoMap */ \"./src/utils/ErizoMap.js\");\n/* harmony import */ var _utils_Base64__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Base64 */ \"./src/utils/Base64.js\");\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/Logger */ \"./src/utils/Logger.js\");\n\n\n\n\n\n\n\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"].module('Room');\n/*\n * Class Room represents a Licode Room. It will handle the connection, local stream publication and\n * remote stream subscription.\n * Typical Room initialization would be:\n * var room = Erizo.Room({token:'213h8012hwduahd-321ueiwqewq'});\n * It also handles RoomEvents and StreamEvents. For example:\n * Event 'room-connected' points out that the user has been successfully connected to the room.\n * Event 'room-disconnected' shows that the user has been already disconnected.\n * Event 'stream-added' indicates that there is a new stream available in the room.\n * Event 'stream-removed' shows that a previous available stream has been removed from the room.\n */\nconst Room = (altIo, altConnectionHelpers, altConnectionManager, specInput) => {\n  const spec = specInput;\n  const that = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"EventDispatcher\"])(specInput);\n  const DISCONNECTED = 0;\n  const CONNECTING = 1;\n  const CONNECTED = 2;\n\n\n  that.remoteStreams = Object(_utils_ErizoMap__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n  that.localStreams = Object(_utils_ErizoMap__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n  that.roomID = '';\n  that.state = DISCONNECTED;\n  that.p2p = false;\n  that.minConnectionQualityLevel = '';\n  that.ConnectionHelpers =\n    altConnectionHelpers === undefined ? _utils_ConnectionHelpers__WEBPACK_IMPORTED_MODULE_1__[\"default\"] : altConnectionHelpers;\n\n  that.erizoConnectionManager =\n    altConnectionManager === undefined ? new _ErizoConnectionManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"]()\n      : new altConnectionManager.ErizoConnectionManager();\n\n  that.disableIceRestart = !!spec.disableIceRestart;\n  let socket = Object(_Socket__WEBPACK_IMPORTED_MODULE_3__[\"Socket\"])(altIo);\n  that.socket = socket;\n  let remoteStreams = that.remoteStreams;\n  let localStreams = that.localStreams;\n  // Private functions\n  const toLog = () => `roomId: ${that.roomID.length > 0 ? that.roomID : 'undefined'}`;\n\n  const removeStream = (streamInput) => {\n    const stream = streamInput;\n    stream.removeAllListeners();\n\n    if (stream.pc && !that.p2p) {\n      stream.pc.removeStream(stream);\n    }\n\n    log.debug(`message: Removed stream, ${stream.toLog()}, ${toLog()}`);\n    if (stream.stream) {\n      // Remove HTML element\n      stream.hide();\n\n      stream.stop();\n      stream.close();\n      delete stream.stream;\n    }\n\n    // Close PC stream\n    if (stream.pc) {\n      if (stream.local && that.p2p) {\n        stream.pc.forEach((connection, id) => {\n          connection.close();\n          stream.pc.remove(id);\n        });\n      } else {\n        that.erizoConnectionManager.maybeCloseConnection(stream.pc);\n        delete stream.pc;\n      }\n    }\n  };\n\n  const dispatchStreamSubscribed = (streamInput, evt) => {\n    const stream = streamInput;\n    // Draw on html\n    log.info(`message: Stream subscribed, ${stream.toLog()}, ${toLog()}`);\n    stream.stream = evt.stream;\n    if (!that.p2p) {\n      stream.pc.addStream(stream);\n    }\n    stream.state = 'subscribed';\n    const evt2 = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-subscribed', stream });\n    that.dispatchEvent(evt2);\n  };\n\n  const maybeDispatchStreamUnsubscribed = (streamInput) => {\n    const stream = streamInput;\n    log.debug(`message: Unsubscribing Stream, ${stream.toLog()}, unsubscribing: ${stream.unsubscribing}, ${toLog()}`);\n    if (stream && stream.unsubscribing.callbackReceived &&\n      (stream.unsubscribing.pcEventReceived || stream.failed)) {\n      log.info(`message: Stream fully unsubscribed, ${stream.toLog()}, ${toLog()}`);\n      stream.unsubscribing.callbackReceived = false;\n      stream.unsubscribing.pcEventReceived = false;\n      removeStream(stream);\n      delete stream.failed;\n      stream.state = 'unsubscribed';\n      const evt2 = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-unsubscribed', stream });\n      that.dispatchEvent(evt2);\n    } else {\n      log.debug(`message: Not dispatching stream unsubscribed yet, ${stream.toLog()}, ${toLog()}`);\n    }\n  };\n\n  const onStreamFailed = (streamInput, message, origin = 'unknown', wasAbleToConnect = false) => {\n    const stream = streamInput;\n    if (that.state !== DISCONNECTED && stream && !stream.failed) {\n      stream.failed = true;\n\n      const streamFailedEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])(\n        { type: 'stream-failed',\n          msg: message || 'Stream failed after connection',\n          stream,\n          origin,\n          wasAbleToConnect });\n      that.dispatchEvent(streamFailedEvt);\n      const connection = stream.pc;\n\n      if (stream.local) {\n        that.unpublish(stream);\n      } else if (stream.unsubscribing.callbackReceived) {\n        maybeDispatchStreamUnsubscribed(stream);\n      } else {\n        that.unsubscribe(stream);\n      }\n\n      if (connection && spec.singlePC) {\n        that.erizoConnectionManager.maybeCloseConnection(connection, true);\n      }\n    }\n  };\n\n\n  const getP2PConnectionOptions = (stream, peerSocket) => {\n    const options = {\n      callback(msg, streamIds) {\n        socket.sendSDP('streamMessageP2P', {\n          streamId: stream.getID(),\n          streamIds,\n          peerSocket,\n          msg });\n      },\n      audio: stream.hasAudio(),\n      video: stream.hasVideo(),\n      iceServers: that.iceServers,\n      maxAudioBW: stream.maxAudioBW,\n      maxVideoBW: stream.maxVideoBW,\n      limitMaxAudioBW: spec.maxAudioBW,\n      limitMaxVideoBW: spec.maxVideoBW,\n      forceTurn: stream.forceTurn,\n      p2p: true,\n      disableIceRestart: that.disableIceRestart,\n    };\n    return options;\n  };\n\n  const createRemoteStreamP2PConnection = (streamInput, peerSocket) => {\n    const stream = streamInput;\n    const connectionOptions = getP2PConnectionOptions(stream, peerSocket);\n    const connection = that.erizoConnectionManager.getOrBuildErizoConnection(connectionOptions);\n    stream.addPC(connection, false, connectionOptions);\n    connection.on('connection-failed', that.dispatchEvent.bind(undefined));\n    stream.on('added', dispatchStreamSubscribed.bind(null, stream));\n    stream.on('icestatechanged', (evt) => {\n      log.debug(`message: icestatechanged, ${stream.toLog()}, iceConnectionState: ${evt.msg.state}, ${toLog()}`);\n      if (evt.msg.state === 'failed') {\n        const message = 'ICE Connection Failed';\n        onStreamFailed(stream, message, 'ice-client', evt.msg.wasAbleToConnect);\n      }\n    });\n  };\n\n  const createLocalStreamP2PConnection = (streamInput, peerSocket) => {\n    const stream = streamInput;\n    const connection = that.erizoConnectionManager.getOrBuildErizoConnection(\n      getP2PConnectionOptions(stream, peerSocket));\n\n    stream.addPC(connection, peerSocket);\n    connection.on('connection-failed', that.dispatchEvent.bind(undefined));\n\n    stream.on('icestatechanged', (evt) => {\n      log.debug(`message: icestatechanged, streamId: ${stream.getID()}, iceConnectionState: ${evt.msg.state}, ${toLog()}`);\n      if (evt.msg.state === 'failed') {\n        stream.pc.get(peerSocket).close();\n        stream.pc.remove(peerSocket);\n      }\n    });\n    connection.addStream(stream);\n  };\n\n  const removeLocalStreamP2PConnection = (streamInput, peerSocket) => {\n    const stream = streamInput;\n    if (stream.pc === undefined || !stream.pc.has(peerSocket)) {\n      return;\n    }\n    const pc = stream.pc.get(peerSocket);\n    pc.close();\n    stream.pc.remove(peerSocket);\n  };\n\n  const onRemoteStreamRemovedListener = (label) => {\n    that.remoteStreams.forEach((stream) => {\n      if (!stream.local && stream.getLabel() === label) {\n        const streamToRemove = stream;\n        streamToRemove.unsubscribing.pcEventReceived = true;\n        maybeDispatchStreamUnsubscribed(streamToRemove);\n      }\n    });\n  };\n\n  const getErizoConnectionOptions = (stream, connectionId, erizoId, options, isRemote) => {\n    const connectionOpts = {\n      callback(message, streamId = stream.getID()) {\n        if (message && message.type && message.type === 'updatestream') {\n          socket.sendSDP('streamMessage', {\n            streamId,\n            erizoId,\n            msg: message,\n            browser: stream.pc && stream.pc.browser }, undefined, () => {});\n        } else {\n          socket.sendSDP('connectionMessage', {\n            connectionId,\n            erizoId,\n            msg: message,\n            browser: stream.pc && stream.pc.browser }, undefined, () => {});\n        }\n      },\n      connectionId,\n      nop2p: true,\n      audio: options.audio && stream.hasAudio(),\n      video: options.video && stream.hasVideo(),\n      maxAudioBW: options.maxAudioBW,\n      maxVideoBW: options.maxVideoBW,\n      simulcast: options.simulcast,\n      limitMaxAudioBW: spec.maxAudioBW,\n      limitMaxVideoBW: spec.maxVideoBW,\n      label: stream.getLabel(),\n      iceServers: that.iceServers,\n      disableIceRestart: that.disableIceRestart,\n      forceTurn: stream.forceTurn,\n      p2p: false,\n      streamRemovedListener: onRemoteStreamRemovedListener,\n      isRemote,\n    };\n    if (!isRemote) {\n      connectionOpts.startVideoBW = options.startVideoBW;\n      connectionOpts.hardMinVideoBW = options.hardMinVideoBW;\n    }\n    return connectionOpts;\n  };\n\n  const createRemoteStreamErizoConnection = (streamInput, connectionId, erizoId, options) => {\n    const stream = streamInput;\n    const connectionOpts = getErizoConnectionOptions(stream, connectionId, erizoId, options, true);\n    const connection = that.erizoConnectionManager\n      .getOrBuildErizoConnection(connectionOpts, erizoId, spec.singlePC);\n    stream.addPC(connection, false, connectionOpts);\n    connection.on('connection-failed', that.dispatchEvent.bind(undefined));\n\n    stream.on('added', dispatchStreamSubscribed.bind(null, stream));\n    stream.on('icestatechanged', (evt) => {\n      log.debug(`message: icestatechanged, ${stream.toLog()}, iceConnectionState: ${evt.msg.state}, ${toLog()}`);\n      if (evt.msg.state === 'failed') {\n        const message = 'ICE Connection Failed';\n        onStreamFailed(stream, message, 'ice-client', evt.msg.wasAbleToConnect);\n        if (spec.singlePC) {\n          connectionOpts.callback({ type: 'failed' });\n        }\n      }\n    });\n  };\n\n  const createLocalStreamErizoConnection = (streamInput, connectionId, erizoId, options) => {\n    const stream = streamInput;\n    const connectionOpts = getErizoConnectionOptions(stream, connectionId, erizoId, options);\n    const connection = that.erizoConnectionManager\n      .getOrBuildErizoConnection(connectionOpts, erizoId, spec.singlePC);\n    stream.addPC(connection, false, options);\n    connection.on('connection-failed', that.dispatchEvent.bind(undefined));\n    stream.on('icestatechanged', (evt) => {\n      log.debug(`message: icestatechanged, ${stream.toLog()}, iceConnectionState: ${evt.msg.state}, ${toLog()}`);\n      if (evt.msg.state === 'failed') {\n        const message = 'ICE Connection Failed';\n        onStreamFailed(stream, message, 'ice-client', evt.msg.wasAbleToConnect);\n        if (spec.singlePC) {\n          connectionOpts.callback({ type: 'failed' });\n        }\n      }\n    });\n    stream.pc.addStream(stream);\n  };\n\n  // We receive an event with a new stream in the room.\n  // type can be \"media\" or \"data\"\n\n  const socketOnAddStream = (arg) => {\n    if (remoteStreams.has(arg.id)) {\n      return;\n    }\n    const stream = Object(_Stream__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(that.Connection, { streamID: arg.id,\n      local: localStreams.has(arg.id),\n      audio: arg.audio,\n      video: arg.video,\n      data: arg.data,\n      label: arg.label,\n      screen: arg.screen,\n      attributes: arg.attributes });\n    stream.room = that;\n    stream.state = 'unsubscribed';\n    remoteStreams.add(arg.id, stream);\n    const evt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-added', stream });\n    that.dispatchEvent(evt);\n  };\n\n  const socketOnStreamMessageFromErizo = (arg) => {\n    log.debug(`message: Failed applying a stream message from erizo, ${toLog()}, msg: ${JSON.stringify(arg)}`);\n  };\n\n  const socketOnConnectionQualityLevel = (arg) => {\n    const level = arg.evt.level;\n    let minLevel = Number.MAX_SAFE_INTEGER;\n    let minLevelMessage = '';\n    localStreams.forEach((stream) => {\n      if (!stream.failed && stream.pc) {\n        if (stream.pc.connectionId === arg.connectionId) {\n          stream.pc.setQualityLevel(level);\n        }\n        const streamLevel = stream.pc.getQualityLevel();\n        if (streamLevel.index < minLevel) {\n          minLevel = streamLevel.index;\n          minLevelMessage = streamLevel.message;\n        }\n      }\n    });\n    remoteStreams.forEach((stream) => {\n      if (!!stream.failed && stream.pc) {\n        if (stream.pc.connectionId === arg.connectionId) {\n          stream.pc.setQualityLevel(level);\n        }\n        const streamLevel = stream.pc.getQualityLevel();\n        if (streamLevel.index < minLevel) {\n          minLevel = streamLevel.index;\n          minLevelMessage = streamLevel.message;\n        }\n      }\n    });\n    if (minLevelMessage !== that.minConnectionQualityLevel) {\n      that.minConnectionQualityLevel = minLevelMessage;\n      that.dispatchEvent(Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'quality-level', message: minLevelMessage }));\n    }\n  };\n\n  const socketOnConnectionMessageFromErizo = (arg) => {\n    if (arg.evt.type === 'quality_level') {\n      socketOnConnectionQualityLevel(arg);\n      return;\n    }\n    const connection = that.erizoConnectionManager.getErizoConnection(arg.connectionId);\n    if (connection) {\n      connection.processSignalingMessage(arg.evt);\n    } else {\n      log.warning(`message: Received signaling message to unknown connectionId, connectionId: ${arg.connectionId}, ${toLog()}`);\n    }\n  };\n\n  const socketOnStreamMessageFromP2P = (arg) => {\n    let stream = localStreams.get(arg.streamId);\n\n    if (stream && !stream.failed) {\n      stream.pc.get(arg.peerSocket).processSignalingMessage(arg.msg);\n    } else {\n      stream = remoteStreams.get(arg.streamId);\n\n      if (!stream.pc) {\n        createRemoteStreamP2PConnection(stream, arg.peerSocket);\n      }\n      stream.pc.processSignalingMessage(arg.msg);\n    }\n  };\n\n  const socketOnPublishMe = (arg) => {\n    const myStream = localStreams.get(arg.streamId);\n\n    createLocalStreamP2PConnection(myStream, arg.peerSocket);\n  };\n\n  const socketOnUnpublishMe = (arg) => {\n    const myStream = localStreams.get(arg.streamId);\n    if (myStream) {\n      removeLocalStreamP2PConnection(myStream, arg.peerSocket);\n    }\n  };\n\n  const socketOnBandwidthAlert = (arg) => {\n    log.debug(`message: Bandwidth Alert, streamId: ${arg.streamID}, bwMessage: ${arg.message}, bandwidth: ${arg.bandwidth}, ${toLog()}`);\n    if (arg.streamID) {\n      const stream = remoteStreams.get(arg.streamID);\n      if (stream && !stream.failed) {\n        const evt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'bandwidth-alert',\n          stream,\n          msg: arg.message,\n          bandwidth: arg.bandwidth });\n        stream.dispatchEvent(evt);\n      }\n    }\n  };\n\n  // We receive an event of new data in one of the streams\n  const socketOnDataStream = (arg) => {\n    const stream = remoteStreams.get(arg.id);\n    const evt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-data', msg: arg.msg, stream });\n    stream.dispatchEvent(evt);\n  };\n\n  // We receive an event of new data in one of the streams\n  const socketOnUpdateAttributeStream = (arg) => {\n    const stream = remoteStreams.get(arg.id);\n    const evt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-attributes-update',\n      attrs: arg.attrs,\n      stream });\n    stream.updateLocalAttributes(arg.attrs);\n    stream.dispatchEvent(evt);\n  };\n\n  // We receive an event of a stream removed from the room\n  const socketOnRemoveStream = (arg) => {\n    let stream = localStreams.get(arg.id);\n    if (stream) {\n      onStreamFailed(stream, 'Stream removed from server', 'server');\n      return;\n    }\n    stream = remoteStreams.get(arg.id);\n    if (stream) {\n      log.info(`message: Stream removed, ${stream.toLog()}, ${toLog()}`);\n      removeStream(stream);\n      remoteStreams.remove(arg.id);\n      const evt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-removed', stream });\n      that.dispatchEvent(evt);\n    }\n  };\n\n  // The socket has disconnected\n  const socketOnDisconnect = () => {\n    log.info(`message: Socket disconnected, reason: lost connection to ErizoController, ${toLog()}`);\n    if (that.state !== DISCONNECTED) {\n      log.error(`message: Unexpected disconnection from ErizoController, ${toLog()}`);\n      const disconnectEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'room-disconnected',\n        message: 'unexpected-disconnection' });\n      that.dispatchEvent(disconnectEvt);\n    }\n  };\n\n  const socketOnReconnecting = (reason) => {\n    log.info(`message: Socket reconnecting, reason: lost connection to ErizoController, ${toLog()}`);\n    const reconnectingEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'room-reconnecting',\n      message: `reconnecting - ${reason}` });\n    that.dispatchEvent(reconnectingEvt);\n  };\n\n  const socketOnReconnected = () => {\n    log.info(`message: Socket reconnected, reason: restablished connection to ErizoController, ${toLog()}`);\n    const reconnectedEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'room-reconnected',\n      message: 'reconnected' });\n    that.dispatchEvent(reconnectedEvt);\n  };\n\n  const socketOnICEConnectionFailed = (arg) => {\n    let stream;\n    if (!arg.streamId) {\n      return;\n    }\n    const message = `message: ICE Connection Failed, type: ${arg.type}, streamId: ${arg.streamId}, state: ${that.state}, ${toLog()}`;\n    log.error(message);\n    if (arg.type === 'publish') {\n      stream = localStreams.get(arg.streamId);\n    } else {\n      stream = remoteStreams.get(arg.streamId);\n    }\n    onStreamFailed(stream, message, 'ice-server');\n  };\n\n  const socketOnError = (e) => {\n    log.error(`message: Error in the connection to Erizo Controller, ${toLog()}, error: ${e}`);\n    const connectEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'room-error', message: e });\n    that.dispatchEvent(connectEvt);\n  };\n\n  const sendDataSocketFromStreamEvent = (evt) => {\n    const stream = evt.stream;\n    const msg = evt.msg;\n    if (stream.local) {\n      socket.sendMessage('sendDataStream', { id: stream.getID(), msg });\n    } else {\n      log.error(`message: You can not send data through a remote stream, ${stream.toLog()}, ${toLog()}`);\n    }\n  };\n\n  const updateAttributesFromStreamEvent = (evt) => {\n    const stream = evt.stream;\n    const attrs = evt.attrs;\n    if (stream.local) {\n      stream.updateLocalAttributes(attrs);\n      socket.sendMessage('updateStreamAttributes', { id: stream.getID(), attrs });\n    } else {\n      log.error(`message: You can not update attributes in a remote stream, ${stream.toLog()}, ${toLog()}`);\n    }\n  };\n\n  const socketEventToArgs = (func, event) => {\n    if (event.args) {\n      func(...event.args);\n    } else {\n      func();\n    }\n  };\n\n  const createSdpConstraints = (type, stream, options) => ({\n    state: type,\n    data: stream.hasData(),\n    audio: stream.hasAudio(),\n    video: stream.hasVideo(),\n    label: stream.getLabel(),\n    screen: stream.hasScreen(),\n    attributes: stream.getAttributes(),\n    metadata: options.metadata,\n    createOffer: options.createOffer,\n    muteStream: options.muteStream,\n    encryptTransport:\n      (options.encryptTransport === undefined) ? true : options.encryptTransport,\n    handlerProfile: options.handlerProfile,\n  });\n\n  const populateStreamFunctions = (id, streamInput, error, callback = () => {}) => {\n    const stream = streamInput;\n    if (id === null) {\n      log.error(`message: Error when publishing the stream, ${stream.toLog()}, ${toLog()}, error: ${error}`);\n      // Unauth -1052488119\n      // Network -5\n      callback(undefined, error);\n      return;\n    }\n    log.info(`message: Stream published, ${stream.toLog()}, ${toLog()}`);\n    stream.getID = () => id;\n    stream.on('internal-send-data', sendDataSocketFromStreamEvent);\n    stream.on('internal-set-attributes', updateAttributesFromStreamEvent);\n    localStreams.add(id, stream);\n    stream.room = that;\n    callback(id);\n  };\n\n  const publishExternal = (streamInput, options, callback = () => {}) => {\n    const stream = streamInput;\n    let type;\n    let arg;\n    if (stream.url) {\n      type = 'url';\n      arg = stream.url;\n    } else {\n      type = 'recording';\n      arg = stream.recording;\n    }\n    log.debug(`message: Checking publish options, ${stream.toLog()}, ${toLog()}`);\n    stream.checkOptions(options);\n    socket.sendSDP('publish', createSdpConstraints(type, stream, options), arg,\n      (id, error) => {\n        populateStreamFunctions(id, stream, error, callback);\n      });\n  };\n\n  const publishP2P = (streamInput, options, callback = () => {}) => {\n    const stream = streamInput;\n    // We save them now to be used when actually publishing in P2P mode.\n    stream.maxAudioBW = options.maxAudioBW;\n    stream.maxVideoBW = options.maxVideoBW;\n    socket.sendSDP('publish', createSdpConstraints('p2p', stream, options), undefined, (id, error) => {\n      populateStreamFunctions(id, stream, error, callback);\n    });\n  };\n\n  const publishData = (streamInput, options, callback = () => {}) => {\n    const stream = streamInput;\n    socket.sendSDP('publish', createSdpConstraints('data', stream, options), undefined, (id, error) => {\n      populateStreamFunctions(id, stream, error, callback);\n    });\n  };\n\n  const publishErizo = (streamInput, options, callback = () => {}) => {\n    const stream = streamInput;\n    log.debug(`message: Publishing to Erizo Normally, createOffer: ${options.createOffer}, ${toLog()}`);\n    const constraints = createSdpConstraints('erizo', stream, options);\n    constraints.minVideoBW = options.minVideoBW;\n    constraints.maxVideoBW = options.maxVideoBW;\n    constraints.scheme = options.scheme;\n\n    socket.sendSDP('publish', constraints, undefined, (id, erizoId, connectionId, error) => {\n      if (id === null) {\n        log.error(`message: Error publishing stream, ${stream.toLog()}, ${toLog()}, error: ${error}`);\n        callback(undefined, error);\n        return;\n      }\n      populateStreamFunctions(id, stream, error, undefined);\n      createLocalStreamErizoConnection(stream, connectionId, erizoId, options);\n      callback(id);\n    });\n  };\n\n  const getVideoConstraints = (stream, video) => {\n    const hasVideo = video && stream.hasVideo();\n    const width = video && video.width;\n    const height = video && video.height;\n    const frameRate = video && video.frameRate;\n    if (width || height || frameRate) {\n      return { width, height, frameRate };\n    }\n    return hasVideo;\n  };\n\n  const subscribeErizo = (streamInput, optionsInput, callback = () => {}) => {\n    const stream = streamInput;\n    const options = optionsInput;\n    options.maxVideoBW = options.maxVideoBW || spec.defaultVideoBW;\n    if (options.maxVideoBW > spec.maxVideoBW) {\n      options.maxVideoBW = spec.maxVideoBW;\n    }\n    options.audio = (options.audio === undefined) ? true : options.audio;\n    options.video = (options.video === undefined) ? true : options.video;\n    options.data = (options.data === undefined) ? true : options.data;\n    options.encryptTransport =\n      (options.encryptTransport === undefined) ? true : options.encryptTransport;\n\n    stream.checkOptions(options);\n    const constraint = { streamId: stream.getID(),\n      audio: options.audio && stream.hasAudio(),\n      video: getVideoConstraints(stream, options.video),\n      maxVideoBW: options.maxVideoBW,\n      data: options.data && stream.hasData(),\n      browser: that.ConnectionHelpers.getBrowser(),\n      createOffer: options.createOffer,\n      metadata: options.metadata,\n      muteStream: options.muteStream,\n      encryptTransport: options.encryptTransport,\n      slideShowMode: options.slideShowMode,\n      handlerProfile: options.handlerProfile,\n    };\n    socket.sendSDP('subscribe', constraint, undefined, (result, erizoId, connectionId, error) => {\n      if (result === null) {\n        log.error(`message: Error subscribing to stream, ${stream.toLog()}, ${toLog()}, error: ${error}`);\n        stream.state = 'unsubscribed';\n        callback(undefined, error);\n        return;\n      }\n\n      log.debug(`message: Subscriber added, ${stream.toLog()}, ${toLog()}, erizoId: ${erizoId}, connectionId: ${connectionId}`);\n      createRemoteStreamErizoConnection(stream, connectionId, erizoId, options);\n      callback(true);\n    });\n  };\n\n  const subscribeData = (streamInput, options, callback = () => {}) => {\n    const stream = streamInput;\n    socket.sendSDP('subscribe',\n      { streamId: stream.getID(),\n        data: options.data,\n        metadata: options.metadata },\n      undefined, (result, error) => {\n        if (result === null) {\n          log.error(`message: Error subscribing to stream, ${stream.toLog()}, ${toLog()}, error: ${error}`);\n          stream.state = 'unsubscribed';\n          callback(undefined, error);\n          return;\n        }\n        log.debug(`message: Stream subscribed, ${stream.toLog()}, ${toLog()}`);\n        const evt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-subscribed', stream });\n        that.dispatchEvent(evt);\n        callback(true);\n      });\n  };\n\n  const clearAll = () => {\n    that.state = DISCONNECTED;\n    socket.state = socket.DISCONNECTED;\n\n    // Close all PeerConnections\n    that.erizoConnectionManager.ErizoConnectionsMap.forEach((connection) => {\n      Object.keys(connection).forEach((key) => {\n        connection[key].close();\n      });\n    });\n\n    // Remove all streams\n    remoteStreams.forEach((stream, id) => {\n      removeStream(stream);\n      remoteStreams.remove(id);\n      if (stream && !stream.failed) {\n        const evt2 = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"StreamEvent\"])({ type: 'stream-removed', stream });\n        that.dispatchEvent(evt2);\n      }\n    });\n    remoteStreams = Object(_utils_ErizoMap__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n\n    // Close Peer Connections\n    localStreams.forEach((stream, id) => {\n      removeStream(stream);\n      localStreams.remove(id);\n    });\n    localStreams = Object(_utils_ErizoMap__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n\n    // Close socket\n    try {\n      socket.disconnect(that.clientIntiatedDisconnection);\n    } catch (error) {\n      log.debug(`message: Socket already disconnected, ${toLog()}, error: ${error}`);\n    }\n    log.info(`message: Disconnected from room, roomId: ${that.roomID}, ${toLog()}`);\n    socket = undefined;\n  };\n\n  const socketOnMemberJoin = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'member_join', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnMemberLeave = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'member_leave', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnGroupCreate = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'group_create', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnGroupInvite = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'group_invite', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnGroupJoin = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'group_join', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnGroupLeave = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'group_leave', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnGroupKickOff = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'group_kickoff', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnGroupDismiss = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'group_dismiss', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnSubRoomCreate = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'subroom_create', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnSubRoomJoin = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'subroom_join', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnSubRoomLeave = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'subroom_leave', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnSubRoomDelete = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'subroom_delete', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnToolsChange = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'tools_change', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnUserInvite = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'user_invite', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnRTCJoin = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'rtc_join', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnWBOJoin = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'wbo_join', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnRTCLeave = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'rtc_leave', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnWBOLeave = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'wbo_leave', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  const socketOnGenericMessage = (event) => {\n    const roomEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'generic_message', message: event });\n    that.dispatchEvent(roomEvt);\n  };\n\n  // Public functions\n\n  // It stablishes a connection to the room.\n  // Once it is done it throws a RoomEvent(\"room-connected\")\n  that.connect = (options = {}) => {\n    const token = JSON.parse(_utils_Base64__WEBPACK_IMPORTED_MODULE_6__[\"default\"].decodeBase64(spec.token));\n\n    if (that.state !== DISCONNECTED) {\n      log.warning(`message: Room already connected, roomId: ${that.roomID}, ${toLog()}`);\n    }\n\n    // 1- Connect to Erizo-Controller\n    that.state = CONNECTING;\n    that.clientIntiatedDisconnection = false;\n    log.info(`message: Connecting to room, tokenId: ${token.tokenId}`);\n    socket.connect(token, options, (response) => {\n      let stream;\n      const streamList = [];\n      const streams = response.streams || [];\n      const roomId = response.id;\n\n      that.p2p = response.p2p;\n      that.iceServers = response.iceServers;\n      that.state = CONNECTED;\n      spec.singlePC = response.singlePC;\n      spec.defaultVideoBW = response.defaultVideoBW;\n      spec.maxVideoBW = response.maxVideoBW;\n      that.streamPriorityStrategy = response.streamPriorityStrategy;\n      that.connectionTargetBw = response.connectionTargetBw;\n\n      // 2- Retrieve list of streams\n      const streamIndices = Object.keys(streams);\n      for (let index = 0; index < streamIndices.length; index += 1) {\n        const arg = streams[streamIndices[index]];\n        stream = Object(_Stream__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(that.ConnectionHelpers, { streamID: arg.id,\n          local: false,\n          audio: arg.audio,\n          video: arg.video,\n          data: arg.data,\n          label: arg.label,\n          screen: arg.screen,\n          attributes: arg.attributes });\n        stream.room = that;\n        stream.state = 'unsubscribed';\n        streamList.push(stream);\n        remoteStreams.add(arg.id, stream);\n      }\n\n      // 3 - Update RoomID\n      that.roomID = roomId;\n\n      log.info(`message: Connected to room, ${toLog()}`);\n\n      const connectEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'room-connected', streams: streamList });\n      that.dispatchEvent(connectEvt);\n    }, (error) => {\n      log.error(`message: Error connecting to room, ${toLog()}, error: ${error}`);\n      const connectEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'room-error', message: error });\n      that.dispatchEvent(connectEvt);\n    });\n  };\n\n  // It disconnects from the room, dispatching a new RoomEvent(\"room-disconnected\")\n  that.disconnect = () => {\n    log.info(`message: Disconnection requested, ${toLog()}`);\n    // 1- Disconnect from room\n    const disconnectEvt = Object(_Events__WEBPACK_IMPORTED_MODULE_2__[\"RoomEvent\"])({ type: 'room-disconnected',\n      message: 'expected-disconnection' });\n    that.clientIntiatedDisconnection = true;\n    that.dispatchEvent(disconnectEvt);\n  };\n\n  // It publishes the stream provided as argument. Once it is added it throws a\n  // StreamEvent(\"stream-added\").\n  that.publish = (streamInput, optionsInput = {}, callback = () => {}) => {\n    const stream = streamInput;\n    const options = optionsInput;\n\n    log.info(`message: Publishing stream, ${stream.toLog()}, ${toLog()}`);\n\n    options.maxVideoBW = options.maxVideoBW || spec.defaultVideoBW;\n    options.limitMaxVideoBW = spec.maxVideoBW;\n    options.limitMaxAudioBW = spec.maxAudioBW;\n    if (options.maxVideoBW > spec.maxVideoBW) {\n      options.maxVideoBW = spec.maxVideoBW;\n    }\n\n    if (options.minVideoBW === undefined) {\n      options.minVideoBW = 0;\n    }\n\n    if (options.minVideoBW > spec.defaultVideoBW) {\n      options.minVideoBW = spec.defaultVideoBW;\n    }\n\n    stream.forceTurn = options.forceTurn;\n\n    options.simulcast = options.simulcast || false;\n\n    options.handlerProfile = options.handlerProfile || null;\n\n    options.muteStream = {\n      audio: stream.audioMuted,\n      video: stream.videoMuted,\n    };\n\n    // 1- If the stream is not local or it is a failed stream we do nothing.\n    if (stream && stream.local && !stream.failed && !localStreams.has(stream.getID())) {\n      // 2- Publish Media Stream to Erizo-Controller\n      if (stream.hasMedia()) {\n        if (stream.isExternal()) {\n          publishExternal(stream, options, callback);\n        } else if (that.p2p) {\n          publishP2P(stream, options, callback);\n        } else {\n          publishErizo(stream, options, callback);\n        }\n      } else if (stream.hasData()) {\n        publishData(stream, options, callback);\n      }\n    } else {\n      log.error(`message: Trying to publish invalid stream, ${stream.toLog()}, ${toLog()}`);\n      callback(undefined, 'Invalid Stream');\n    }\n  };\n\n  // Returns callback(id, error)\n  that.startRecording = (stream, callback = () => {}) => {\n    if (stream === undefined) {\n      log.error(`message: Trying to start recording on an invalid stream, ${stream.toLog()}, ${toLog()}`);\n      callback(undefined, 'Invalid Stream');\n      return;\n    }\n    log.debug(`message: Start Recording stream, ${stream.toLog()}, ${toLog()}`);\n    socket.sendMessage('startRecorder', { to: stream.getID() }, (id, error) => {\n      if (id === null) {\n        log.error(`message: Error on start recording, ${stream.toLog()}, ${toLog()}, error: ${error}`);\n        callback(undefined, error);\n        return;\n      }\n\n      log.debug(`message: Start recording, id: ${id}, ${toLog()}`);\n      callback(id);\n    });\n  };\n\n  // Returns callback(id, error)\n  that.stopRecording = (recordingId, callback = () => {}) => {\n    socket.sendMessage('stopRecorder', { id: recordingId }, (result, error) => {\n      if (result === null) {\n        log.error(`message: Error on stop recording, recordingId: ${recordingId}, ${toLog()}, error: ${error}`);\n        callback(undefined, error);\n        return;\n      }\n      log.debug(`message: Stop recording, id: ${recordingId}, ${toLog()}`);\n      callback(true);\n    });\n  };\n\n  // It unpublishes the local stream in the room, dispatching a StreamEvent(\"stream-removed\")\n  that.unpublish = (streamInput, callback = () => {}) => {\n    const stream = that.localStreams.get(streamInput.getID());\n    // Unpublish stream from Erizo-Controller\n    if (stream && stream.local) {\n      // Media stream\n      socket.sendMessage('unpublish', stream.getID(), (result, error) => {\n        if (result === null) {\n          log.error(`message: Error unpublishing stream, ${stream.toLog()}, ${toLog()}, error: ${error}`);\n          callback(undefined, error);\n          return;\n        }\n\n        log.info(`message: Stream unpublished, ${stream.toLog()}, ${toLog()}`);\n\n        delete stream.failed;\n        callback(true);\n      });\n\n      log.info(`message: Unpublishing stream, ${stream.toLog()}, ${toLog()}`);\n      stream.room = undefined;\n      if (stream.hasMedia() && !stream.isExternal()) {\n        const localStream = localStreams.has(stream.getID()) ?\n          localStreams.get(stream.getID()) : stream;\n        removeStream(localStream);\n      }\n      localStreams.remove(stream.getID());\n\n      stream.getID = () => {};\n      stream.off('internal-send-data', sendDataSocketFromStreamEvent);\n      stream.off('internal-set-attributes', updateAttributesFromStreamEvent);\n    } else {\n      const error = `message: Cannot unpublish because stream does not exist or is not local, ${stream.toLog()}, ${toLog()}`;\n      log.error(error);\n      callback(undefined, error);\n    }\n  };\n\n  that.sendControlMessage = (stream, type, action) => {\n    if (stream && stream.getID()) {\n      const msg = { type: 'control', action };\n      socket.sendSDP('streamMessage', { streamId: stream.getID(), msg });\n    }\n  };\n\n  // It subscribe to a remote stream and draws it inside the HTML tag given by the ID='elementID'\n  that.subscribe = (streamInput, optionsInput = {}, callback = () => {}) => {\n    const stream = that.remoteStreams.get(streamInput.getID());\n    const options = optionsInput;\n\n    if (stream && !stream.local && !stream.failed) {\n      if (stream.state !== 'unsubscribed' && stream.state !== 'unsubscribing') {\n        log.warning(`message: Cannot subscribe to a subscribed stream, ${stream.toLog()}, ${toLog()}`);\n        callback(undefined, 'Stream already subscribed');\n        return;\n      }\n      stream.state = 'subscribing';\n      if (stream.hasMedia()) {\n        // 1- Subscribe to Stream\n        if (!stream.hasVideo() && !stream.hasScreen()) {\n          options.video = false;\n        }\n        if (!stream.hasAudio()) {\n          options.audio = false;\n        }\n\n        options.muteStream = {\n          audio: stream.audioMuted,\n          video: stream.videoMuted,\n        };\n\n        stream.forceTurn = options.forceTurn;\n\n        if (that.p2p) {\n          const streamToSubscribe = remoteStreams.get(stream.getID());\n          streamToSubscribe.maxAudioBW = options.maxAudioBW;\n          streamToSubscribe.maxVideoBW = options.maxVideoBW;\n          socket.sendSDP('subscribe', { streamId: stream.getID(), metadata: options.metadata });\n          callback(true);\n        } else {\n          subscribeErizo(stream, options, callback);\n        }\n      } else if (stream.hasData() && options.data !== false) {\n        subscribeData(stream, options, callback);\n      } else {\n        log.warning(`message: There is nothing to subscribe to in stream, ${stream.toLog()}, ${toLog()}`);\n        stream.state = 'unsubscribed';\n        callback(undefined, 'Nothing to subscribe to');\n        return;\n      }\n      // Subscribe to stream stream\n      log.info(`message: Subscribing to stream, ${stream.toLog()}, ${toLog()}`);\n    } else {\n      let error = 'Error on subscribe';\n      stream.state = 'unsubscribed';\n      if (!stream) {\n        log.warning(`message: Cannot subscribe to invalid stream, ${stream.toLog()}, ${toLog()}`);\n        error = 'Invalid or undefined stream';\n      } else if (stream.local) {\n        log.warning(`message: Cannot subscribe to local stream, ${stream.toLog()}, ${toLog()}`);\n        error = 'Local copy of stream';\n      } else if (stream.failed) {\n        log.warning(`message: Cannot subscribe to failed stream, ${stream.toLog()}, ${toLog()},` +\n          `unsubscribing: ${stream.unsubscribing}, failed: ${stream.failed}`);\n        error = 'Failed stream';\n      }\n      callback(undefined, error);\n    }\n  };\n\n  // It unsubscribes from the stream, removing the HTML element.\n  that.unsubscribe = (streamInput, callback = () => {}) => {\n    const stream = that.remoteStreams.get(streamInput.getID());\n    // Unsubscribe from stream\n    if (socket !== undefined) {\n      if (stream && !stream.local) {\n        if (stream.state !== 'subscribed' && stream.state !== 'subscribing') {\n          log.warning(`message: Cannot unsubscribe to a stream that is not subscribed, ${stream.toLog()}, ${toLog()}`);\n          callback(undefined, 'Stream not subscribed');\n          return;\n        }\n        stream.state = 'unsubscribing';\n        log.info(`message: Unsubscribing stream, ${stream.toLog()}, ${toLog()}`);\n        socket.sendMessage('unsubscribe', stream.getID(), (result, error) => {\n          if (result === null) {\n            stream.state = 'subscribed';\n            callback(undefined, error);\n            return;\n          }\n          callback(true);\n          stream.unsubscribing.callbackReceived = true;\n          maybeDispatchStreamUnsubscribed(stream);\n        }, () => {\n          stream.state = 'subscribed';\n          log.error(`message: Error calling unsubscribe, ${stream.toLog()}, ${toLog()}`);\n        });\n      } else {\n        stream.state = 'unsubscribed';\n        callback(undefined,\n          'Error unsubscribing, stream does not exist or is not local');\n      }\n    }\n  };\n\n  that.getStreamStats = (stream, callback = () => {}) => {\n    if (!socket) {\n      return 'Error getting stats - no socket';\n    }\n    if (!stream) {\n      return 'Error getting stats - no stream';\n    }\n\n    socket.sendMessage('getStreamStats', stream.getID(), (result) => {\n      if (result) {\n        callback(result);\n      }\n    });\n    return undefined;\n  };\n\n  // It searchs the streams that have \"name\" attribute with \"value\" value\n  that.getStreamsByAttribute = (name, value) => {\n    const streams = [];\n\n    remoteStreams.forEach((stream) => {\n      if (stream.getAttributes() !== undefined && stream.getAttributes()[name] === value) {\n        streams.push(stream);\n      }\n    });\n\n    return streams;\n  };\n\n  that.setStreamPriorityStrategy = (strategyId, callback = () => { }) => {\n    socket.sendMessage('setStreamPriorityStrategy', strategyId, (result) => {\n      that.streamPriorityStrategy = strategyId;\n      if (result) {\n        callback(result);\n      }\n    });\n  };\n\n  that.setConnectionTargetBandwidth = (connectionTargetBw, callback = () => { }) => {\n    socket.sendMessage('setConnectionTargetBandwidth', connectionTargetBw, (result) => {\n      that.connectionTargetBw = connectionTargetBw;\n      if (result) {\n        callback(result);\n      }\n    });\n  };\n\n  that.sendToolsData = (msg, callback) => {\n    socket.sendMessage('sendToolsData', { msg }, (result) => {\n      if (result) {\n        callback(result);\n      }\n    });\n  };\n\n  that.sendGenericMessage = (msg, callback) => {\n    socket.sendMessage('sendGenericMessage', { msg }, (result) => {\n      if (result) {\n        callback(result);\n      }\n    });\n  };\n\n  that.on('room-disconnected', clearAll);\n\n  socket.on('onAddStream', socketEventToArgs.bind(null, socketOnAddStream));\n  socket.on('stream_message_erizo', socketEventToArgs.bind(null, socketOnStreamMessageFromErizo));\n  socket.on('stream_message_p2p', socketEventToArgs.bind(null, socketOnStreamMessageFromP2P));\n  socket.on('connection_message_erizo', socketEventToArgs.bind(null, socketOnConnectionMessageFromErizo));\n  socket.on('publish_me', socketEventToArgs.bind(null, socketOnPublishMe));\n  socket.on('unpublish_me', socketEventToArgs.bind(null, socketOnUnpublishMe));\n  socket.on('onBandwidthAlert', socketEventToArgs.bind(null, socketOnBandwidthAlert));\n  socket.on('onDataStream', socketEventToArgs.bind(null, socketOnDataStream));\n  socket.on('onUpdateAttributeStream', socketEventToArgs.bind(null, socketOnUpdateAttributeStream));\n  socket.on('onRemoveStream', socketEventToArgs.bind(null, socketOnRemoveStream));\n  socket.on('disconnect', socketEventToArgs.bind(null, socketOnDisconnect));\n  socket.on('reconnecting', socketEventToArgs.bind(null, socketOnReconnecting));\n  socket.on('reconnected', socketEventToArgs.bind(null, socketOnReconnected));\n  socket.on('connection_failed', socketEventToArgs.bind(null, socketOnICEConnectionFailed));\n  socket.on('error', socketEventToArgs.bind(null, socketOnError));\n\n  socket.on('member_join', socketEventToArgs.bind(null, socketOnMemberJoin));\n  socket.on('member_leave', socketEventToArgs.bind(null, socketOnMemberLeave));\n  socket.on('group_create', socketEventToArgs.bind(null, socketOnGroupCreate));\n  socket.on('group_invite', socketEventToArgs.bind(null, socketOnGroupInvite));\n  socket.on('group_join', socketEventToArgs.bind(null, socketOnGroupJoin));\n  socket.on('group_kickoff', socketEventToArgs.bind(null, socketOnGroupKickOff));\n  socket.on('group_leave', socketEventToArgs.bind(null, socketOnGroupLeave));\n  socket.on('group_dismiss', socketEventToArgs.bind(null, socketOnGroupDismiss));\n  socket.on('subroom_create', socketEventToArgs.bind(null, socketOnSubRoomCreate));\n  socket.on('subroom_join', socketEventToArgs.bind(null, socketOnSubRoomJoin));\n  socket.on('subroom_leave', socketEventToArgs.bind(null, socketOnSubRoomLeave));\n  socket.on('subroom_delete', socketEventToArgs.bind(null, socketOnSubRoomDelete));\n  socket.on('tools_change', socketEventToArgs.bind(null, socketOnToolsChange));\n  socket.on('user_invite', socketEventToArgs.bind(null, socketOnUserInvite));\n  socket.on('rtc_join', socketEventToArgs.bind(null, socketOnRTCJoin));\n  socket.on('wbo_join', socketEventToArgs.bind(null, socketOnWBOJoin));\n  socket.on('rtc_leave', socketEventToArgs.bind(null, socketOnRTCLeave));\n  socket.on('wbo_leave', socketEventToArgs.bind(null, socketOnWBOLeave));\n  socket.on('generic_message', socketEventToArgs.bind(null, socketOnGenericMessage));\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Room);\n\n\n//# sourceURL=webpack://Erizo/./src/Room.js?");

/***/ }),

/***/ "./src/Socket.js":
/*!***********************!*\
  !*** ./src/Socket.js ***!
  \***********************/
/*! exports provided: SocketEvent, Socket */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SocketEvent\", function() { return SocketEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Socket\", function() { return Socket; });\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"../node_modules/socket.io-client/lib/index.js\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(socket_io_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/Logger */ \"./src/utils/Logger.js\");\n/* harmony import */ var _common_ReliableSocket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/ReliableSocket */ \"../common/ReliableSocket.js\");\n/* harmony import */ var _common_ReliableSocket__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_common_ReliableSocket__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Events */ \"./src/Events.js\");\n\n\n\n\n\n\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].module('Socket');\n\nconst SocketEvent = (type, specInput) => {\n  const that = Object(_Events__WEBPACK_IMPORTED_MODULE_3__[\"LicodeEvent\"])({ type });\n  that.args = specInput.args;\n  return that;\n};\n\n/*\n * Class Socket represents a client Socket.IO connection to ErizoController.\n */\nconst Socket = (newIo) => {\n  const that = Object(_Events__WEBPACK_IMPORTED_MODULE_3__[\"EventDispatcher\"])();\n  const defaultCallback = () => {};\n\n  that.CONNECTED = Symbol('connected');\n  that.RECONNECTING = Symbol('reconnecting');\n  that.DISCONNECTED = Symbol('disconnected');\n\n  const WEBSOCKET_NORMAL_CLOSURE = 1000;\n  that.state = that.DISCONNECTED;\n  that.IO = newIo === undefined ? socket_io_client__WEBPACK_IMPORTED_MODULE_0___default.a : newIo;\n\n  let socket;\n  let reliableSocket;\n  const pageUnloaded = false;\n\n  const emit = (type, ...args) => {\n    that.emit(SocketEvent(type, { args }));\n  };\n\n  that.connect = (token, userOptions, callback = defaultCallback, error = defaultCallback) => {\n    const query = userOptions;\n    Object.assign(userOptions, token);\n    // Reconnection Logic: 3 attempts.\n    // 1st attempt: 1000 +/-  500ms\n    // 2nd attempt: 2000 +/- 1000ms\n    // 3rd attempt: 4000 +/- 2000ms\n\n    // Example of a failing reconnection with 3 reconnection Attempts:\n    // - connect            // the client successfully establishes a connection to the server\n    // - disconnect         // some bad thing happens (the client goes offline, for example)\n    // - reconnect_attempt  // after a given delay, the client tries to reconnect\n    // - reconnect_error    // the first attempt fails\n    // - reconnect_attempt  // after a given delay, the client tries to reconnect\n    // - reconnect_error    // the second attempt fails\n    // - reconnect_attempt  // after a given delay, the client tries to reconnect\n    // - reconnect_error    // the third attempt fails\n    // - reconnect_failed   // the client won't try to reconnect anymore\n\n    // Example of a success reconnection:\n    // - connect            // the client successfully establishes a connection to the server.\n    // - disconnect         // some bad thing happens (the server crashes, for example).\n    // - reconnect_attempt  // after a given delay, the client tries to reconnect.\n    // - reconnect_error    // the first attempt fails.\n    // - reconnect_attempt  // after a given delay, the client tries to reconnect again\n    // - connect            // the client successfully restore the connection to the server.\n    const options = {\n      reconnection: true,\n      reconnectionAttempts: 3,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 4000,\n      randomizationFactor: 0.5,\n      secure: token.secure,\n      forceNew: true,\n      transports: ['websocket'],\n      rejectUnauthorized: false,\n      query,\n    };\n    const transport = token.secure ? 'wss://' : 'ws://';\n    const host = token.host;\n    socket = that.IO.connect(transport + host, options);\n    reliableSocket = new _common_ReliableSocket__WEBPACK_IMPORTED_MODULE_2__[\"ReliableSocket\"](socket);\n\n    that.reliableSocket = reliableSocket;\n\n    // Hack to know the exact reason of the WS closure (socket.io does not publish it)\n    let closeCode = WEBSOCKET_NORMAL_CLOSURE;\n    const socketOnCloseFunction = socket.io.engine.transport.ws.onclose;\n    socket.io.engine.transport.ws.onclose = (closeEvent) => {\n      log.info(`message: WebSocket closed, code: ${closeEvent.code}, id: ${that.id}`);\n      closeCode = closeEvent.code;\n      socketOnCloseFunction(closeEvent);\n    };\n\n    reliableSocket.on('connected', (response) => {\n      log.info(`message: connected, previousState: ${that.state.toString()}, id: ${that.id}`);\n      that.state = that.CONNECTED;\n      that.id = response.clientId;\n      callback(response);\n    });\n\n    reliableSocket.on('onAddStream', emit.bind(that, 'onAddStream'));\n\n    reliableSocket.on('stream_message_erizo', emit.bind(that, 'stream_message_erizo'));\n    reliableSocket.on('stream_message_p2p', emit.bind(that, 'stream_message_p2p'));\n    reliableSocket.on('connection_message_erizo', emit.bind(that, 'connection_message_erizo'));\n    reliableSocket.on('publish_me', emit.bind(that, 'publish_me'));\n    reliableSocket.on('unpublish_me', emit.bind(that, 'unpublish_me'));\n    reliableSocket.on('onBandwidthAlert', emit.bind(that, 'onBandwidthAlert'));\n\n    // We receive an event of new data in one of the streams\n    reliableSocket.on('onDataStream', emit.bind(that, 'onDataStream'));\n\n    // We receive an event of new data in one of the streams\n    reliableSocket.on('onUpdateAttributeStream', emit.bind(that, 'onUpdateAttributeStream'));\n\n    // We receive an event of a stream removed from the room\n    reliableSocket.on('onRemoveStream', emit.bind(that, 'onRemoveStream'));\n\n    reliableSocket.on('onAutomaticStreamsSubscription', emit.bind(that, 'onAutomaticStreamsSubscription'));\n\n    reliableSocket.on('connection_failed', (evt) => {\n      log.warning(`message: connection failed, id: ${that.id}, evt: ${evt}`);\n      emit('connection_failed', evt);\n    });\n\n    // Socket.io Internal events\n    reliableSocket.on('connect', () => {\n      log.info(`message: connect, previousState: ${that.state.toString()}, id: ${that.id}`);\n      if (that.state === that.RECONNECTING) {\n        log.info(`message: reconnected, id: ${that.id}`);\n        that.state = that.CONNECTED;\n        emit('reconnected', that.id);\n      }\n    });\n\n    reliableSocket.on('error', (err) => {\n      log.warning(`message: socket error, id: ${that.id}, state: ${that.state.toString()}, error: ${err}`);\n      const tokenIssue = 'token: ';\n      if (err.startsWith(tokenIssue)) {\n        that.state = that.DISCONNECTED;\n        error(err.slice(tokenIssue.length));\n        reliableSocket.disconnect();\n        return;\n      }\n      if (that.state === that.RECONNECTING) {\n        that.state = that.DISCONNECTED;\n        reliableSocket.disconnect(true);\n        emit('disconnect', err);\n        return;\n      }\n      if (that.state === that.DISCONNECTED) {\n        reliableSocket.disconnect(true);\n        return;\n      }\n      emit('error');\n    });\n\n    // The socket has disconnected\n    reliableSocket.on('disconnect', (reason) => {\n      const pendingMessages = reliableSocket.getNumberOfPending();\n      log.info(`message: disconnect, id: ${that.id}, reason: ${reason}, closeCode: ${closeCode}, pending: ${pendingMessages}`);\n      if (that.clientInitiated) {\n        that.state = that.DISCONNECTED;\n        if (!pageUnloaded) {\n          emit('disconnect', reason);\n        }\n        reliableSocket.disconnect(true);\n      } else {\n        that.state = that.RECONNECTING;\n        emit('reconnecting', `reason: ${reason}, pendingMessages: ${pendingMessages}`);\n      }\n    });\n\n    reliableSocket.on('connect_error', (err) => {\n      // This can be thrown during reconnection attempts too\n      log.warning(`message: connect error, id: ${that.id}, error: ${err.message}`);\n    });\n\n    reliableSocket.on('connect_timeout', (err) => {\n      log.warning(`message: connect timeout, id: ${that.id}, error: ${err.message}`);\n    });\n\n    reliableSocket.on('reconnecting', (attemptNumber) => {\n      log.info(`message: reconnecting, id: ${that.id}, attempt: ${attemptNumber}`);\n    });\n\n    reliableSocket.on('reconnect', (attemptNumber) => {\n      // Underlying WS has been reconnected, but we still need to wait for the 'connect' message.\n      log.info(`message: internal ws reconnected, id: ${that.id}, attempt: ${attemptNumber}`);\n    });\n\n    reliableSocket.on('reconnect_attempt', (attemptNumber) => {\n      // We are starting a new reconnection attempt, so we will update the query to let\n      // ErizoController know that the new socket is a reconnection attempt.\n      log.debug(`message: reconnect attempt, id: ${that.id}, attempt: ${attemptNumber}`);\n      query.clientId = that.id;\n      socket.io.opts.query = query;\n    });\n\n    reliableSocket.on('reconnect_error', (err) => {\n      // The last reconnection attempt failed.\n      log.info(`message: error reconnecting, id: ${that.id}, error: ${err.message}`);\n    });\n\n    reliableSocket.on('reconnect_failed', () => {\n      // We could not reconnect after all attempts.\n      log.info(`message: reconnect failed, id: ${that.id}`);\n      that.state = that.DISCONNECTED;\n      emit('disconnect', 'reconnect failed');\n      reliableSocket.disconnect(true);\n    });\n\n    reliableSocket.on('member_join', emit.bind(that, 'member_join'));\n    reliableSocket.on('member_leave', emit.bind(that, 'member_leave'));\n    reliableSocket.on('group_join', emit.bind(that, 'group_join'));\n    reliableSocket.on('group_create', emit.bind(that, 'group_create'));\n    reliableSocket.on('group_invite', emit.bind(that, 'group_invite'));\n    reliableSocket.on('group_leave', emit.bind(that, 'group_leave'));\n    reliableSocket.on('group_kickoff', emit.bind(that, 'group_kickoff'));\n    reliableSocket.on('group_dismiss', emit.bind(that, 'group_dismiss'));\n    reliableSocket.on('tools_change', emit.bind(that, 'tools_change'));\n    reliableSocket.on('user_invite', emit.bind(that, 'user_invite'));\n    reliableSocket.on('rtc_join', emit.bind(that, 'rtc_join'));\n    reliableSocket.on('wbo_join', emit.bind(that, 'wbo_join'));\n    reliableSocket.on('rtc_leave', emit.bind(that, 'rtc_leave'));\n    reliableSocket.on('wbo_leave', emit.bind(that, 'wbo_leave'));\n    reliableSocket.on('generic_message', emit.bind(that, 'generic_message'));\n  };\n\n  // const onBeforeUnload = (evtIn) => {\n  //   const evt = evtIn;\n  //   if (that.state === that.DISCONNECTED) {\n  //     return;\n  //   }\n  //   evt.preventDefault();\n  //   delete evt.returnValue;\n  //   pageUnloaded = true;\n  //   that.disconnect(true);\n  // };\n\n  that.disconnect = (clientInitiated) => {\n    log.warning(`message: disconnect, id: ${that.id}, clientInitiated: ${clientInitiated}, state: ${that.state.toString()}`);\n    that.state = that.DISCONNECTED;\n    that.clientInitiated = clientInitiated;\n    if (clientInitiated) {\n      reliableSocket.emit('clientDisconnection');\n    }\n    reliableSocket.disconnect();\n    // window.removeEventListener('beforeunload', onBeforeUnload);\n  };\n\n  // window.addEventListener('beforeunload', onBeforeUnload);\n\n  // Function to send a message to the server using socket.io\n  that.sendMessage = (type, msg, callback = defaultCallback, error = defaultCallback) => {\n    if (that.state === that.DISCONNECTED) {\n      log.debug(`message: Trying to send a message over a disconnected Socket, id: ${that.id}, type: ${type}`);\n      return;\n    }\n    reliableSocket.emit(type, msg, (respType, resp) => {\n      if (respType === 'success') {\n        callback(resp);\n      } else if (respType === 'error') {\n        error(resp);\n      } else {\n        callback(respType, resp);\n      }\n    });\n  };\n\n  // It sends a SDP message to the server using socket.io\n  that.sendSDP = (type, options, sdp, callback = defaultCallback) => {\n    if (that.state === that.DISCONNECTED) {\n      log.warning(`message: Trying to send a message over a disconnected Socket, id: ${that.id}`);\n      return;\n    }\n    reliableSocket.emit(type, { options, sdp }, (...args) => {\n      callback(...args);\n    });\n  };\n  return that;\n};\n\n\n\n\n//# sourceURL=webpack://Erizo/./src/Socket.js?");

/***/ }),

/***/ "./src/Stream.js":
/*!***********************!*\
  !*** ./src/Stream.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Events */ \"./src/Events.js\");\n/* harmony import */ var _utils_ConnectionHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/ConnectionHelpers */ \"./src/utils/ConnectionHelpers.js\");\n/* harmony import */ var _utils_ErizoMap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/ErizoMap */ \"./src/utils/ErizoMap.js\");\n/* harmony import */ var _utils_Random__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Random */ \"./src/utils/Random.js\");\n/* harmony import */ var _views_VideoPlayer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./views/VideoPlayer */ \"./src/views/VideoPlayer.js\");\n/* harmony import */ var _views_AudioPlayer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./views/AudioPlayer */ \"./src/views/AudioPlayer.js\");\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Logger */ \"./src/utils/Logger.js\");\n/* global document */\n\n\n\n\n\n\n\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_6__[\"default\"].module('Stream');\n\n/*\n * Class Stream represents a local or a remote Stream in the Room. It will handle the WebRTC\n * stream and identify the stream and where it should be drawn.\n */\nconst Stream = (altConnectionHelpers, specInput) => {\n  const spec = specInput;\n  const that = Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"EventDispatcher\"])(spec);\n  let limitMaxVideoBW;\n  let limitMaxAudioBW;\n\n  const defaultSimulcastSpatialLayers = 3;\n  const scaleResolutionDownBase = 2;\n  const scaleResolutionDownBaseScreenshare = 1;\n\n  that.stream = spec.stream;\n  that.url = spec.url;\n  that.recording = spec.recording;\n  that.room = undefined;\n  that.showing = false;\n  that.local = false;\n  that.video = spec.video;\n  that.audio = spec.audio;\n  that.screen = spec.screen;\n  that.videoSize = spec.videoSize;\n  that.videoFrameRate = spec.videoFrameRate;\n  that.extensionId = spec.extensionId;\n  that.desktopStreamId = spec.desktopStreamId;\n  that.audioMuted = false;\n  that.videoMuted = false;\n  that.maxVideoBW = undefined;\n  that.maxAudioBW = undefined;\n  that.unsubscribing = {\n    callbackReceived: false,\n    pcEventReceived: false,\n  };\n  const videoSenderLicodeParameters = {};\n  that.p2p = false;\n  that.ConnectionHelpers =\n    altConnectionHelpers === undefined ? _utils_ConnectionHelpers__WEBPACK_IMPORTED_MODULE_1__[\"default\"] : altConnectionHelpers;\n  if (that.url !== undefined) {\n    spec.label = `ei_${_utils_Random__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getRandomValue()}`;\n  }\n  const onStreamAddedToPC = (evt) => {\n    if (evt.stream.id === that.getLabel()) {\n      that.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'added', stream: evt.stream }));\n    }\n  };\n\n  const onStreamRemovedFromPC = (evt) => {\n    if (evt.stream.id === that.getLabel()) {\n      that.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'removed', stream: that }));\n    }\n  };\n\n  const onICEConnectionStateChange = (msg) => {\n    that.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'icestatechanged', msg }));\n  };\n\n  if (that.videoSize !== undefined &&\n        (!(that.videoSize instanceof Array) ||\n           that.videoSize.length !== 4)) {\n    throw Error('Invalid Video Size');\n  }\n  if (spec.local === undefined || spec.local === true) {\n    that.local = true;\n  }\n\n  const setMaxVideoBW = (maxVideoBW) => {\n    if (that.local) {\n      // Estimate codec bitrate from connection (with overhead) bitrate - source https://datatracker.ietf.org/doc/html/rfc8829\n      // using 0.90 instead of 0.95 to allow more margin to our quality selection algorithms\n      const translated = (maxVideoBW * 1000 * 0.90) - (50 * 40 * 8);\n      log.info(`message: Setting maxVideoBW, streamId: ${that.getID()}, maxVideoBW: ${maxVideoBW}, translated: ${translated}`);\n      that.maxVideoBW = translated;\n      // Make sure all the current parameters respect the new limit\n      if (videoSenderLicodeParameters) {\n        Object.keys(videoSenderLicodeParameters).forEach((key) => {\n          const senderParam = videoSenderLicodeParameters[key];\n          senderParam.maxBitrate = senderParam.maxBitrate > that.maxVideoBW ?\n            that.maxVideoBW : senderParam.maxBitrate;\n        });\n      }\n    } else {\n      that.maxVideoBW = maxVideoBW;\n    }\n  };\n\n  const configureParameterForLayer = (layerParameters, layerConfig) => {\n    const newParameters = layerParameters;\n    newParameters.maxBitrate = layerConfig.maxBitrate;\n    if (layerConfig.active !== undefined) {\n      newParameters.active = layerConfig.active;\n    }\n    return newParameters;\n  };\n\n  that.applySenderEncoderParameters = () => {\n    that.stream.transceivers.forEach((transceiver) => {\n      if (transceiver.sender && transceiver.sender.track.kind === 'video') {\n        const parameters = transceiver.sender.getParameters();\n        Object.keys(videoSenderLicodeParameters).forEach((layerId) => {\n          if (parameters.encodings[layerId] === undefined) {\n            log.warning(`message: Failed Configure parameters for layer, layer: ${layerId}, config: ${videoSenderLicodeParameters[layerId]}`);\n          } else {\n            parameters.encodings[layerId] = configureParameterForLayer(\n              parameters.encodings[layerId],\n              videoSenderLicodeParameters[layerId]);\n          }\n        });\n        transceiver.sender.setParameters(parameters)\n          .then((result) => {\n            log.debug(`message: Success setting simulcast layer configs, result: ${result}`);\n          })\n          .catch((e) => {\n            log.warning(`message: Error setting simulcast layer configs, error: ${e}`);\n          });\n      }\n    });\n  };\n\n  const initializeEncoderParameters = (simulcastConfig) => {\n    log.info('Initializing encoder simulcastConfig', simulcastConfig, 'MaxVideoBW is ', that.maxVideoBW);\n    if (!simulcastConfig) {\n      videoSenderLicodeParameters[0] = { maxBitrate: that.maxVideoBW }; // No simulcast\n      return;\n    }\n    const layersToConfigure = simulcastConfig.numSpatialLayers;\n    for (let index = 0; index < layersToConfigure; index += 1) {\n      videoSenderLicodeParameters[index] = {};\n    }\n    if (that.maxVideoBW) {\n      log.debug('Setting maxVideoBW', that.maxVideoBW);\n      videoSenderLicodeParameters[layersToConfigure - 1].maxBitrate = that.maxVideoBW;\n    }\n  };\n\n  const configureVideoStream = (options) => {\n    log.debug('configureVideoStream', options);\n    limitMaxAudioBW = options.limitMaxAudioBW;\n    limitMaxVideoBW = options.limitMaxVideoBW;\n    if (options.maxVideoBW) {\n      setMaxVideoBW(options.maxVideoBW);\n    }\n    if (that.local) {\n      initializeEncoderParameters(options.simulcast);\n    }\n  };\n\n  // Public functions\n  that.getID = () => {\n    let id;\n    // Unpublished local streams don't yet have an ID.\n    if (that.local && !spec.streamID) {\n      id = 'local';\n    } else {\n      id = spec.streamID;\n    }\n    return id;\n  };\n\n  that.getLabel = () => {\n    if (that.stream && that.stream.id) {\n      return that.stream.id;\n    }\n    return spec.label;\n  };\n\n  // Get attributes of this stream.\n  that.getAttributes = () => spec.attributes;\n\n  // Changes the attributes of this stream in the room.\n  that.setAttributes = (attrs) => {\n    if (that.local) {\n      that.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'internal-set-attributes', stream: that, attrs }));\n      return;\n    }\n    log.error(`message: Failed to set attributes data, reason: Stream has not been published, ${that.toLog()}`);\n  };\n\n  that.toLog = () => {\n    let info = `streamId: ${that.getID()}, label: ${that.getLabel()}`;\n    if (spec.attributes) {\n      const attrKeys = Object.keys(spec.attributes);\n      attrKeys.forEach((attrKey) => {\n        info = `${info}, ${attrKey}: ${spec.attributes[attrKey]}`;\n      });\n    }\n    return info;\n  };\n\n  that.updateLocalAttributes = (attrs) => {\n    spec.attributes = attrs;\n  };\n\n  // Indicates if the stream has audio activated\n  that.hasAudio = () => spec.audio !== false && spec.audio !== undefined;\n\n  // Indicates if the stream has video activated\n  that.hasVideo = () => spec.video !== false && spec.video !== undefined;\n\n  // Indicates if the stream has data activated\n  that.hasData = () => spec.data !== false && spec.data !== undefined;\n\n  // Indicates if the stream has screen activated\n  that.hasScreen = () => spec.screen;\n\n  that.hasMedia = () => spec.audio || spec.video || spec.screen;\n\n  that.isExternal = () => that.url !== undefined || that.recording !== undefined;\n\n  that.getMaxVideoBW = () => that.maxVideoBW;\n  that.hasSimulcast = () => Object.keys(videoSenderLicodeParameters).length > 1;\n\n  that.generateEncoderParameters = () => {\n    const nativeSenderParameters = [];\n    const requestedLayers = Object.keys(videoSenderLicodeParameters).length ||\n      defaultSimulcastSpatialLayers;\n    const isScreenshare = that.hasScreen();\n    const base = isScreenshare ? scaleResolutionDownBaseScreenshare : scaleResolutionDownBase;\n\n    for (let layer = 1; layer <= requestedLayers; layer += 1) {\n      const layerConfig = Object.assign({}, videoSenderLicodeParameters[layer - 1]);\n      layerConfig.rid = (layer).toString();\n      layerConfig.scaleResolutionDownBy = base ** (requestedLayers - layer);\n      nativeSenderParameters.push(layerConfig);\n    }\n    return nativeSenderParameters;\n  };\n\n  that.addPC = (pc, p2pKey = undefined, options) => {\n    if (p2pKey) {\n      that.p2p = true;\n      if (that.pc === undefined) {\n        that.pc = Object(_utils_ErizoMap__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n      }\n      that.pc.add(p2pKey, pc);\n      pc.on('ice-state-change', onICEConnectionStateChange);\n      return;\n    }\n    if (that.pc) {\n      that.pc.off('add-stream', onStreamAddedToPC);\n      that.pc.off('remove-stream', onStreamRemovedFromPC);\n      that.pc.off('ice-state-change', onICEConnectionStateChange);\n    }\n    that.pc = pc;\n    that.pc.on('add-stream', onStreamAddedToPC);\n    that.pc.on('remove-stream', onStreamRemovedFromPC);\n    that.pc.on('ice-state-change', onICEConnectionStateChange);\n    if (options) {\n      configureVideoStream(options);\n    }\n  };\n\n  // Sends data through this stream.\n  that.sendData = (msg) => {\n    if (that.local && that.hasData()) {\n      that.emit(Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'internal-send-data', stream: that, msg }));\n      return;\n    }\n    log.error(`message: Failed to send data, reason: Stream has not been published, ${that.toLog()}`);\n  };\n\n  // Initializes the stream and tries to retrieve a stream from local video and audio\n  // We need to call this method before we can publish it in the room.\n  that.init = () => {\n    try {\n      if ((spec.audio || spec.video || spec.screen) && spec.url === undefined) {\n        log.debug(`message: Requested access to local media, ${that.toLog()}`);\n        let videoOpt = spec.video;\n        if (videoOpt === true || spec.screen === true) {\n          videoOpt = videoOpt === true || videoOpt === null ? {} : videoOpt;\n          if (that.videoSize !== undefined) {\n            videoOpt.width = {\n              min: that.videoSize[0],\n              max: that.videoSize[2],\n            };\n\n            videoOpt.height = {\n              min: that.videoSize[1],\n              max: that.videoSize[3],\n            };\n          }\n\n          if (that.videoFrameRate !== undefined) {\n            videoOpt.frameRate = {\n              min: that.videoFrameRate[0],\n              max: that.videoFrameRate[1],\n            };\n          }\n        } else if (spec.screen === true && videoOpt === undefined) {\n          videoOpt = true;\n        }\n        const opt = { video: videoOpt,\n          audio: spec.audio,\n          fake: spec.fake,\n          screen: spec.screen,\n          extensionId: that.extensionId,\n          desktopStreamId: that.desktopStreamId };\n\n        that.ConnectionHelpers.GetUserMedia(opt, (stream) => {\n          log.debug(`message: User has granted access to local media, ${that.toLog()}`);\n          that.stream = stream;\n\n          that.dispatchEvent(Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'access-accepted' }));\n          const nativeStreamContainsVideo = that.stream.getVideoTracks().length > 0;\n          const nativeStreamContainsAudio = that.stream.getAudioTracks().length > 0;\n          if (!nativeStreamContainsAudio) {\n            spec.audio = false;\n          }\n          if (!nativeStreamContainsVideo) {\n            spec.video = false;\n          }\n\n          that.stream.getTracks().forEach((trackInput) => {\n            log.debug(`message: getTracks, track: ${trackInput.kind}, ${that.toLog()}`);\n            const track = trackInput;\n            track.onended = () => {\n              that.stream.getTracks().forEach((secondTrackInput) => {\n                const secondTrack = secondTrackInput;\n                secondTrack.onended = null;\n              });\n              const streamEvent = Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'stream-ended',\n                stream: that,\n                msg: track.kind });\n              that.dispatchEvent(streamEvent);\n            };\n          });\n        }, (error) => {\n          log.error(`message: Failed to get access to local media, ${that.toLog()}, error: ${error.name}, message: ${error.message}`);\n          const streamEvent = Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'access-denied', msg: error });\n          that.dispatchEvent(streamEvent);\n        });\n      } else {\n        const streamEvent = Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'access-accepted' });\n        that.dispatchEvent(streamEvent);\n      }\n    } catch (e) {\n      log.error(`message: Failed to get access to local media, ${that.toLog()}, error: ${e}`);\n      const streamEvent = Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"StreamEvent\"])({ type: 'access-denied', msg: e });\n      that.dispatchEvent(streamEvent);\n    }\n  };\n\n\n  that.close = () => {\n    if (that.local) {\n      if (that.room !== undefined) {\n        that.room.unpublish(that);\n      }\n      // Remove HTML element\n      that.hide();\n      if (that.stream !== undefined) {\n        that.stream.getTracks().forEach((trackInput) => {\n          const track = trackInput;\n          track.onended = null;\n          track.stop();\n        });\n      }\n      that.stream = undefined;\n    }\n    if (that.pc && !that.p2p) {\n      that.pc.off('add-stream', onStreamAddedToPC);\n      that.pc.off('remove-stream', onStreamRemovedFromPC);\n      that.pc.off('ice-state-change', onICEConnectionStateChange);\n    } else if (that.pc && that.p2p) {\n      that.pc.forEach((pc) => {\n        pc.off('add-stream', onStreamAddedToPC);\n        pc.off('remove-stream', onStreamRemovedFromPC);\n        pc.off('ice-state-change', onICEConnectionStateChange);\n      });\n    }\n    that.removeAllListeners();\n  };\n\n  that.play = (elementID, optionsInput) => {\n    const options = optionsInput || {};\n    that.elementID = elementID;\n    let player;\n    const nativeStreamContainsVideo = that.stream && that.stream.getVideoTracks().length > 0;\n    const nativeStreamContainsAudio = that.stream && that.stream.getAudioTracks().length > 0;\n    if (nativeStreamContainsVideo && (that.hasVideo() || that.hasScreen())) {\n      // Draw on HTML\n      if (elementID !== undefined) {\n        player = Object(_views_VideoPlayer__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({ id: that.getID(),\n          stream: that,\n          elementID,\n          options });\n        that.player = player;\n        that.showing = true;\n      }\n    } else if (nativeStreamContainsAudio && that.hasAudio()) {\n      player = Object(_views_AudioPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({ id: that.getID(),\n        stream: that,\n        elementID,\n        options });\n      that.player = player;\n      that.showing = true;\n    }\n  };\n\n  that.stop = () => {\n    if (that.showing) {\n      if (that.player !== undefined) {\n        try {\n          that.player.destroy();\n        } catch (e) {\n          log.warning(`message: Exception when destroying Player, error: ${e.message}, ${that.toLog()}`);\n        }\n        that.showing = false;\n      }\n    }\n  };\n\n  that.show = that.play;\n  that.hide = that.stop;\n\n  const getFrame = () => {\n    if (that.player !== undefined && that.stream !== undefined) {\n      const video = that.player.video;\n      const style = document.defaultView.getComputedStyle(video);\n      const width = parseInt(style.getPropertyValue('width'), 10);\n      const height = parseInt(style.getPropertyValue('height'), 10);\n      const left = parseInt(style.getPropertyValue('left'), 10);\n      const top = parseInt(style.getPropertyValue('top'), 10);\n\n      let div;\n      if (typeof that.elementID === 'object' &&\n              typeof that.elementID.appendChild === 'function') {\n        div = that.elementID;\n      } else {\n        div = document.getElementById(that.elementID);\n      }\n\n      const divStyle = document.defaultView.getComputedStyle(div);\n      const divWidth = parseInt(divStyle.getPropertyValue('width'), 10);\n      const divHeight = parseInt(divStyle.getPropertyValue('height'), 10);\n      const canvas = document.createElement('canvas');\n\n      canvas.id = 'testing';\n      canvas.width = divWidth;\n      canvas.height = divHeight;\n      canvas.setAttribute('style', 'display: none');\n      // document.body.appendChild(canvas);\n      const context = canvas.getContext('2d');\n\n      context.drawImage(video, left, top, width, height);\n\n      return canvas;\n    }\n    return null;\n  };\n\n  that.getVideoFrameURL = (format) => {\n    const canvas = getFrame();\n    if (canvas !== null) {\n      if (format) {\n        return canvas.toDataURL(format);\n      }\n      return canvas.toDataURL();\n    }\n    return null;\n  };\n\n  that.getVideoFrame = () => {\n    const canvas = getFrame();\n    if (canvas !== null) {\n      return canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\n    }\n    return null;\n  };\n\n  that.checkOptions = (configInput, isUpdate) => {\n    const config = configInput;\n    // TODO: Check for any incompatible options\n    if (config.maxVideoBW && config.maxVideoBW > limitMaxVideoBW) {\n      config.maxVideoBW = limitMaxVideoBW;\n    }\n    if (config.maxAudioBW && config.maxAudioBW > limitMaxAudioBW) {\n      config.maxAudioBW = limitMaxAudioBW;\n    }\n    if (isUpdate === true) { // We are updating the stream\n      if (config.audio || config.screen) {\n        log.warning(`message: Cannot update type of subscription, ${that.toLog()}`);\n        config.audio = undefined;\n        config.screen = undefined;\n      }\n    } else if (that.local === false) { // check what we can subscribe to\n      if (config.video === true && that.hasVideo() === false) {\n        log.warning(`message: Trying to subscribe to video when there is no video, ${that.toLog()}`);\n        config.video = false;\n      }\n      if (config.audio === true && that.hasAudio() === false) {\n        log.warning(`message: Trying to subscribe to audio when there is no audio, ${that.toLog()}`);\n        config.audio = false;\n      }\n    }\n    if (that.local === false) {\n      if (!that.hasVideo() && (config.slideShowMode === true)) {\n        log.warning(`message: Cannot enable slideShowMode without video, ${that.toLog()}`);\n        config.slideShowMode = false;\n      }\n    }\n  };\n\n  const muteStream = (callback = () => {}) => {\n    if (that.room && that.room.p2p) {\n      log.warning(`message: muteAudio/muteVideo are not implemented in p2p streams, ${that.toLog()}`);\n      callback('error');\n      return;\n    }\n    if (!that.stream || !that.pc) {\n      log.warning(`message: muteAudio/muteVideo cannot be called until a stream is published or subscribed, ${that.toLog()}`);\n      callback('error');\n    }\n    for (let index = 0; index < that.stream.getVideoTracks().length; index += 1) {\n      const track = that.stream.getVideoTracks()[index];\n      track.enabled = !that.videoMuted;\n    }\n    const config = { muteStream: { audio: that.audioMuted, video: that.videoMuted } };\n    that.checkOptions(config, true);\n    that.pc.updateSpec(config, that.getID(), callback);\n  };\n\n  that.muteAudio = (isMuted, callback = () => {}) => {\n    that.audioMuted = isMuted;\n    muteStream(callback);\n  };\n\n  that.muteVideo = (isMuted, callback = () => {}) => {\n    that.videoMuted = isMuted;\n    muteStream(callback);\n  };\n\n  // eslint-disable-next-line no-underscore-dangle\n  that._setStaticQualityLayer = (spatialLayer, temporalLayer, callback = () => {}) => {\n    if (that.room && that.room.p2p) {\n      log.warning(`message: setStaticQualityLayer is not implemented in p2p streams, ${that.toLog()}`);\n      callback('error');\n      return;\n    }\n    const config = { qualityLayer: { spatialLayer, temporalLayer } };\n    that.checkOptions(config, true);\n    that.pc.updateSpec(config, that.getID(), callback);\n  };\n\n  // eslint-disable-next-line no-underscore-dangle\n  that._setDynamicQualityLayer = (callback) => {\n    if (that.room && that.room.p2p) {\n      log.warning(`message: setDynamicQualityLayer is not implemented in p2p streams, ${that.toLog()}`);\n      callback('error');\n      return;\n    }\n    const config = { qualityLayer: { spatialLayer: -1, temporalLayer: -1 } };\n    that.checkOptions(config, true);\n    that.pc.updateSpec(config, that.getID(), callback);\n  };\n\n  // eslint-disable-next-line no-underscore-dangle\n  that._enableSlideShowBelowSpatialLayer = (enabled, spatialLayer = 0, callback = () => {}) => {\n    if (that.room && that.room.p2p) {\n      log.warning(`message: enableSlideShowBelowSpatialLayer is not implemented in p2p streams, ${that.toLog()}`);\n      callback('error');\n      return;\n    }\n    const config = { slideShowBelowLayer: { enabled, spatialLayer } };\n    that.checkOptions(config, true);\n    log.debug(`message: Calling updateSpec, ${that.toLog()}, config: ${JSON.stringify(config)}`);\n    that.pc.updateSpec(config, that.getID(), callback);\n  };\n\n  // This is an alias to keep backwards compatibility\n  // eslint-disable-next-line no-underscore-dangle\n  that._setMinSpatialLayer = that._enableSlideShowBelowSpatialLayer.bind(undefined, true);\n\n  const controlHandler = (handlersInput, publisherSideInput, enable) => {\n    let publisherSide = publisherSideInput;\n    let handlers = handlersInput;\n    if (publisherSide !== true) {\n      publisherSide = false;\n    }\n\n    handlers = (typeof handlers === 'string') ? [handlers] : handlers;\n    handlers = (handlers instanceof Array) ? handlers : [];\n\n    if (handlers.length > 0) {\n      that.room.sendControlMessage(that, 'control', { name: 'controlhandlers',\n        enable,\n        publisherSide,\n        handlers });\n    }\n  };\n\n  that.disableHandlers = (handlers, publisherSide) => {\n    controlHandler(handlers, publisherSide, false);\n  };\n\n  that.enableHandlers = (handlers, publisherSide) => {\n    controlHandler(handlers, publisherSide, true);\n  };\n\n  const setEncodingConfig = (field, values, check = () => true) => {\n    Object.keys(values).forEach((layerId) => {\n      const value = values[layerId];\n      if (!videoSenderLicodeParameters[layerId]) {\n        log.warning(`Cannot set parameter ${field} for layer ${layerId}, it does not exist`);\n      }\n      if (check(value)) {\n        videoSenderLicodeParameters[layerId][field] = value;\n      }\n    });\n  };\n\n  that.updateSimulcastLayersBitrate = (bitrates) => {\n    if (that.pc && that.local) {\n      // limit with maxVideoBW\n      const limitedBitrates = Object.assign({}, bitrates);\n      Object.keys(limitedBitrates).forEach((key) => {\n        // explicitly passing undefined means assigning the max for that layer\n        if (limitedBitrates[key] > that.maxVideoBW || limitedBitrates[key] === undefined) {\n          log.info('message: updateSimulcastLayersBitrate defaulting to max bitrate,' +\n          `, layer :${key}, requested: ${limitedBitrates[key]}, max: ${that.maxVideoBW}`);\n          limitedBitrates[key] = that.maxVideoBW;\n        }\n      });\n      setEncodingConfig('maxBitrate', limitedBitrates);\n      that.applySenderEncoderParameters();\n    }\n  };\n\n  that.updateSimulcastActiveLayers = (layersInfo) => {\n    if (that.pc && that.local) {\n      const ifIsBoolean = value => value === true || value === false;\n      setEncodingConfig('active', layersInfo, ifIsBoolean);\n      that.applySenderEncoderParameters();\n    }\n  };\n\n  that.updateConfiguration = (config, callback = () => {}) => {\n    if (config === undefined) { return; }\n    if (that.pc) {\n      that.checkOptions(config, true);\n      if (that.local) {\n        if (config.maxVideoBW) {\n          setMaxVideoBW(config.maxVideoBW);\n          that.applySenderEncoderParameters();\n        }\n        if (that.room.p2p) {\n          for (let index = 0; index < that.pc.length; index += 1) {\n            that.pc[index].updateSpec(config, that.getID(), callback);\n          }\n        } else {\n          that.pc.updateSpec(config, that.getID(), callback);\n          if (config.maxVideoBW) {\n            setMaxVideoBW(config.maxVideoBW);\n          }\n        }\n      } else {\n        that.pc.updateSpec(config, that.getID(), callback);\n      }\n    } else {\n      callback('This stream has no peerConnection attached, ignoring');\n    }\n  };\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stream);\n\n\n//# sourceURL=webpack://Erizo/./src/Stream.js?");

/***/ }),

/***/ "./src/utils/Base64.js":
/*!*****************************!*\
  !*** ./src/utils/Base64.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst Base64 = (() => {\n  let base64Str;\n  let base64Count;\n\n  const END_OF_INPUT = -1;\n  const base64Chars = [\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n    'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\n    'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\n    'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',\n    'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\n    'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\n    'w', 'x', 'y', 'z', '0', '1', '2', '3',\n    '4', '5', '6', '7', '8', '9', '+', '/',\n  ];\n\n  const reverseBase64Chars = [];\n\n  for (let i = 0; i < base64Chars.length; i += 1) {\n    reverseBase64Chars[base64Chars[i]] = i;\n  }\n\n  const setBase64Str = (str) => {\n    base64Str = str;\n    base64Count = 0;\n  };\n\n  const readBase64 = () => {\n    if (!base64Str) {\n      return END_OF_INPUT;\n    }\n    if (base64Count >= base64Str.length) {\n      return END_OF_INPUT;\n    }\n    const c = base64Str.charCodeAt(base64Count) & 0xff; // eslint-disable-line no-bitwise\n    base64Count += 1;\n    return c;\n  };\n\n  const encodeBase64 = (str) => {\n    let result;\n    let lineCount;\n    let done;\n    setBase64Str(str);\n    result = '';\n    const inBuffer = new Array(3);\n    lineCount = 0;\n    done = false;\n    while (!done && (inBuffer[0] = readBase64()) !== END_OF_INPUT) {\n      inBuffer[1] = readBase64();\n      inBuffer[2] = readBase64();\n      // eslint-disable-next-line no-bitwise\n      result += (base64Chars[inBuffer[0] >> 2]);\n      if (inBuffer[1] !== END_OF_INPUT) {\n        // eslint-disable-next-line no-bitwise\n        result += (base64Chars[((inBuffer[0] << 4) & 0x30) | (inBuffer[1] >> 4)]);\n        if (inBuffer[2] !== END_OF_INPUT) {\n          // eslint-disable-next-line no-bitwise\n          result += (base64Chars[((inBuffer[1] << 2) & 0x3c) | (inBuffer[2] >> 6)]);\n          // eslint-disable-next-line no-bitwise\n          result += (base64Chars[inBuffer[2] & 0x3F]);\n        } else {\n          // eslint-disable-next-line no-bitwise\n          result += (base64Chars[((inBuffer[1] << 2) & 0x3c)]);\n          result = `${result}=`;\n          done = true;\n        }\n      } else {\n        // eslint-disable-next-line no-bitwise\n        result += (base64Chars[((inBuffer[0] << 4) & 0x30)]);\n        result = `${result}=`;\n        result = `${result}=`;\n        done = true;\n      }\n      lineCount += 4;\n      if (lineCount >= 76) {\n        result = `${result}\\n`;\n        lineCount = 0;\n      }\n    }\n    return result;\n  };\n\n  const readReverseBase64 = () => {\n    if (!base64Str) {\n      return END_OF_INPUT;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if (base64Count >= base64Str.length) {\n        return END_OF_INPUT;\n      }\n      const nextCharacter = base64Str.charAt(base64Count);\n      base64Count += 1;\n      if (reverseBase64Chars[nextCharacter]) {\n        return reverseBase64Chars[nextCharacter];\n      }\n      if (nextCharacter === 'A') {\n        return 0;\n      }\n    }\n  };\n\n  const ntos = (value) => {\n    let n = value.toString(16);\n    if (n.length === 1) {\n      n = `0${n}`;\n    }\n    n = `%${n}`;\n    return unescape(n);\n  };\n\n  const decodeBase64 = (str) => {\n    let result;\n    let done;\n    setBase64Str(str);\n    result = '';\n    const inBuffer = new Array(4);\n    done = false;\n    while (!done &&\n              (inBuffer[0] = readReverseBase64()) !== END_OF_INPUT &&\n              (inBuffer[1] = readReverseBase64()) !== END_OF_INPUT) {\n      inBuffer[2] = readReverseBase64();\n      inBuffer[3] = readReverseBase64();\n      // eslint-disable-next-line no-bitwise,no-mixed-operators\n      result += ntos((((inBuffer[0] << 2) & 0xff) | inBuffer[1] >> 4));\n      if (inBuffer[2] !== END_OF_INPUT) {\n        // eslint-disable-next-line no-bitwise,no-mixed-operators\n        result += ntos((((inBuffer[1] << 4) & 0xff) | inBuffer[2] >> 2));\n        if (inBuffer[3] !== END_OF_INPUT) {\n          // eslint-disable-next-line no-bitwise\n          result += ntos((((inBuffer[2] << 6) & 0xff) | inBuffer[3]));\n        } else {\n          done = true;\n        }\n      } else {\n        done = true;\n      }\n    }\n    return result;\n  };\n\n  return {\n    encodeBase64,\n    decodeBase64,\n  };\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Base64);\n\n\n//# sourceURL=webpack://Erizo/./src/utils/Base64.js?");

/***/ }),

/***/ "./src/utils/ConnectionHelpers.js":
/*!****************************************!*\
  !*** ./src/utils/ConnectionHelpers.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Logger */ \"./src/utils/Logger.js\");\n/* global navigator, window, chrome */\n\n\nconst log = _Logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].module('ConnectionHelpers');\n\nconst getBrowser = () => {\n  let browser = 'none';\n\n  if (( true && module.exports)) {\n    browser = 'fake';\n  } else if (window.navigator.userAgent.match('Firefox') !== null) {\n    // Firefox\n    browser = 'mozilla';\n  } else if (window.navigator.userAgent.match('Chrome') !== null) {\n    browser = 'chrome-stable';\n    if (window.navigator.userAgent.match('Electron') !== null) {\n      browser = 'electron';\n    }\n  } else if (window.navigator.userAgent.match('Safari') !== null) {\n    browser = 'safari';\n  } else if (window.navigator.userAgent.match('AppleWebKit') !== null) {\n    browser = 'safari';\n  }\n  return browser;\n};\n\nconst GetUserMedia = (config, callback = () => {}, error = () => {}) => {\n  let screenConfig;\n\n  const getUserMedia = (userMediaConfig, cb, errorCb) => {\n    navigator.mediaDevices.getUserMedia(userMediaConfig).then(cb).catch(errorCb);\n  };\n\n  const getDisplayMedia = (userMediaConfig, cb, errorCb) => {\n    navigator.mediaDevices.getDisplayMedia(userMediaConfig).then(cb).catch(errorCb);\n  };\n\n  const configureScreensharing = () => {\n    switch (getBrowser()) {\n      case 'electron' :\n        log.debug('message: Screen sharing in Electron');\n        screenConfig = {};\n        screenConfig.video = config.video || {};\n        screenConfig.video.mandatory = config.video.mandatory || {};\n        screenConfig.video.mandatory.chromeMediaSource = 'desktop';\n        screenConfig.video.mandatory.chromeMediaSourceId = config.desktopStreamId;\n        getUserMedia(screenConfig, callback, error);\n        break;\n      case 'mozilla':\n        log.debug('message: Screen sharing in Firefox');\n        screenConfig = {};\n        if (config.video !== undefined) {\n          screenConfig.video = config.video;\n          if (!screenConfig.video.mediaSource) {\n            screenConfig.video.mediaSource = 'window' || false;\n          }\n        } else {\n          screenConfig = {\n            audio: config.audio,\n            video: { mediaSource: 'window' || false },\n          };\n        }\n        getUserMedia(screenConfig, callback, error);\n        break;\n\n      case 'chrome-stable':\n        log.debug('message: Screen sharing in Chrome');\n        screenConfig = {};\n        if (config.desktopStreamId) {\n          screenConfig.video = config.video || { mandatory: {} };\n          screenConfig.video.mandatory = screenConfig.video.mandatory || {};\n          screenConfig.video.mandatory.chromeMediaSource = 'desktop';\n          screenConfig.video.mandatory.chromeMediaSourceId = config.desktopStreamId;\n          getUserMedia(screenConfig, callback, error);\n        } else {\n          // Default extensionId - this extension is only usable in our server,\n          // please make your own extension based on the code in\n          // erizo_controller/erizoClient/extras/chrome-extension\n          let extensionId = 'okeephmleflklcdebijnponpabbmmgeo';\n          if (config.extensionId) {\n            log.debug(`message: extensionId supplied, extensionId: ${config.extensionId}`);\n            extensionId = config.extensionId;\n          }\n          log.debug('message: Screen access on chrome stable looking for extension');\n          try {\n            chrome.runtime.sendMessage(extensionId, { getStream: true },\n              (response) => {\n                if (response === undefined) {\n                  log.error('message: Access to screen denied');\n                  const theError = { code: 'Access to screen denied' };\n                  error(theError);\n                  return;\n                }\n                const theId = response.streamId;\n                if (config.video.mandatory !== undefined) {\n                  screenConfig.video = config.video || { mandatory: {} };\n                  screenConfig.video.mandatory.chromeMediaSource = 'desktop';\n                  screenConfig.video.mandatory.chromeMediaSourceId = theId;\n                } else {\n                  screenConfig = { video: { mandatory: { chromeMediaSource: 'desktop',\n                    chromeMediaSourceId: theId } } };\n                }\n                getUserMedia(screenConfig, callback, error);\n              });\n          } catch (e) {\n            log.debug('message: Screensharing plugin is not accessible');\n            const theError = { code: 'no_plugin_present' };\n            error(theError);\n          }\n        }\n        break;\n      default:\n        log.error('message: This browser does not support ScreenSharing');\n    }\n  };\n\n  if (config.screen) {\n    if (config.desktopStreamId || config.extensionId) {\n      log.debug('message: Screen access requested using GetUserMedia');\n      configureScreensharing();\n    } else {\n      log.debug('message: Screen access requested using GetDisplayMedia');\n      getDisplayMedia(config, callback, error);\n    }\n  } else if ( true && module.exports) {\n    log.error('message: Video/audio streams not supported in erizofc yet');\n  } else {\n    log.debug(`message: Calling getUserMedia, config: ${JSON.stringify(config)}`);\n    getUserMedia(config, callback, error);\n  }\n};\n\n\nconst ConnectionHelpers = { GetUserMedia, getBrowser };\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ConnectionHelpers);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/harmony-module.js */ \"../../node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack://Erizo/./src/utils/ConnectionHelpers.js?");

/***/ }),

/***/ "./src/utils/ErizoMap.js":
/*!*******************************!*\
  !*** ./src/utils/ErizoMap.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst ErizoMap = () => {\n  const that = {};\n  let values = {};\n\n  that.add = (id, value) => {\n    values[id] = value;\n  };\n\n  that.get = id => values[id];\n\n  that.has = id => values[id] !== undefined;\n\n  that.size = () => Object.keys(values).length;\n\n  that.forEach = (func) => {\n    const keys = Object.keys(values);\n    for (let index = 0; index < keys.length; index += 1) {\n      const key = keys[index];\n      const value = values[key];\n      func(value, key);\n    }\n  };\n\n  that.keys = () => Object.keys(values);\n\n  that.remove = (id) => {\n    delete values[id];\n  };\n\n  that.clear = () => {\n    values = {};\n  };\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ErizoMap);\n\n\n//# sourceURL=webpack://Erizo/./src/utils/ErizoMap.js?");

/***/ }),

/***/ "./src/utils/Logger.js":
/*!*****************************!*\
  !*** ./src/utils/Logger.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * API to write logs based on traditional logging mechanisms: debug, trace, info, warning, error\n */\nconst Logger = (() => {\n  const DEBUG = 0;\n  const TRACE = 1;\n  const INFO = 2;\n  const WARNING = 3;\n  const ERROR = 4;\n  const NONE = 5;\n  let logPrefix = '';\n  let outputFunction;\n\n  // It sets the new log level. We can set it to NONE if we do not want to print logs\n  const setLogLevel = (level) => {\n    let targetLevel = level;\n    if (level > Logger.NONE) {\n      targetLevel = Logger.NONE;\n    } else if (level < Logger.DEBUG) {\n      targetLevel = Logger.DEBUG;\n    }\n    Logger.logLevel = targetLevel;\n  };\n\n  outputFunction = (args) => {\n    // eslint-disable-next-line no-console\n    console.log(...args);\n  };\n\n  const setOutputFunction = (newOutputFunction) => {\n    outputFunction = newOutputFunction;\n  };\n\n  const setLogPrefix = (newLogPrefix) => {\n    logPrefix = newLogPrefix;\n  };\n\n  // Generic function to print logs for a given level:\n  //  Logger.[DEBUG, TRACE, INFO, WARNING, ERROR]\n  const log = (level, ...args) => {\n    let out = logPrefix;\n    if (level === Logger.DEBUG) {\n      out = `${out}DEBUG`;\n    } else if (level === Logger.TRACE) {\n      out = `${out}TRACE`;\n    } else if (level === Logger.INFO) {\n      out = `${out}INFO`;\n    } else if (level === Logger.WARNING) {\n      out = `${out}WARNING`;\n    } else if (level === Logger.ERROR) {\n      out = `${out}ERROR`;\n    }\n    out = `${out}: `;\n    const tempArgs = [out].concat(args);\n    if (Logger.panel !== undefined) {\n      let tmp = '';\n      for (let idx = 0; idx < tempArgs.length; idx += 1) {\n        tmp += tempArgs[idx];\n      }\n      Logger.panel.value = `${Logger.panel.value}\\n${tmp}`;\n    } else {\n      outputFunction.apply(Logger, [tempArgs]);\n    }\n  };\n\n  const logFromModule = (moduleName, moduleMinLevel, logLevel, ...args) => {\n    if (moduleMinLevel === undefined && logLevel >= Logger.logLevel) {\n      log(logLevel, `(${moduleName})`, ...args);\n    } else if (logLevel >= moduleMinLevel) {\n      log(logLevel, `(${moduleName})`, ...args);\n    }\n  };\n\n  class ModuleLogger {\n    constructor(name) {\n      this.name = name;\n    }\n\n    setLogLevel(level) { this.level = level; }\n\n    debug(...args) { logFromModule(this.name, this.level, Logger.DEBUG, ...args); }\n    trace(...args) { logFromModule(this.name, this.level, Logger.TRACE, ...args); }\n    info(...args) { logFromModule(this.name, this.level, Logger.INFO, ...args); }\n    warning(...args) { logFromModule(this.name, this.level, Logger.WARNING, ...args); }\n    error(...args) { logFromModule(this.name, this.level, Logger.ERROR, ...args); }\n  }\n\n  const modules = new Map();\n\n  const module = (moduleName) => {\n    if (modules.has(moduleName)) {\n      return modules.get(moduleName);\n    }\n    const newModule = new ModuleLogger(moduleName);\n    modules.set(moduleName, newModule);\n    return newModule;\n  };\n\n  return {\n    logLevel: DEBUG,\n    DEBUG,\n    TRACE,\n    INFO,\n    WARNING,\n    ERROR,\n    NONE,\n    setLogLevel,\n    setOutputFunction,\n    setLogPrefix,\n    module,\n  };\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Logger);\n\n\n//# sourceURL=webpack://Erizo/./src/utils/Logger.js?");

/***/ }),

/***/ "./src/utils/Random.js":
/*!*****************************!*\
  !*** ./src/utils/Random.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* global window */\n\nconst Random = (() => {\n  const getRandomValue = () => {\n    const array = new Uint16Array(1);\n    window.crypto.getRandomValues(array);\n    return array[0];\n  };\n\n  return {\n    getRandomValue,\n  };\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Random);\n\n\n//# sourceURL=webpack://Erizo/./src/utils/Random.js?");

/***/ }),

/***/ "./src/utils/SdpHelpers.js":
/*!*********************************!*\
  !*** ./src/utils/SdpHelpers.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst SdpHelpers = {};\n\nSdpHelpers.addSim = (spatialLayers) => {\n  let line = 'a=ssrc-group:SIM';\n  spatialLayers.forEach((spatialLayerId) => {\n    line += ` ${spatialLayerId}`;\n  });\n  return `${line}\\r\\n`;\n};\n\nSdpHelpers.addGroup = (spatialLayerId, spatialLayerIdRtx) =>\n  `a=ssrc-group:FID ${spatialLayerId} ${spatialLayerIdRtx}\\r\\n`;\n\nSdpHelpers.addSpatialLayer = (cname, msid, mslabel,\n  label, spatialLayerId, spatialLayerIdRtx) =>\n  `a=ssrc:${spatialLayerId} cname:${cname}\\r\\n` +\n  `a=ssrc:${spatialLayerId} msid:${msid}\\r\\n` +\n  `a=ssrc:${spatialLayerId} mslabel:${mslabel}\\r\\n` +\n  `a=ssrc:${spatialLayerId} label:${label}\\r\\n` +\n  `a=ssrc:${spatialLayerIdRtx} cname:${cname}\\r\\n` +\n  `a=ssrc:${spatialLayerIdRtx} msid:${msid}\\r\\n` +\n  `a=ssrc:${spatialLayerIdRtx} mslabel:${mslabel}\\r\\n` +\n  `a=ssrc:${spatialLayerIdRtx} label:${label}\\r\\n`;\n\nSdpHelpers.setMaxBW = (sdp, spec) => {\n  if (!spec.p2p) {\n    return;\n  }\n  if (spec.video && spec.maxVideoBW) {\n    const video = sdp.getMedia('video');\n    if (video) {\n      video.setBitrate(spec.maxVideoBW);\n    }\n  }\n\n  if (spec.audio && spec.maxAudioBW) {\n    const audio = sdp.getMedia('audio');\n    if (audio) {\n      audio.setBitrate(spec.maxAudioBW);\n    }\n  }\n};\n\nSdpHelpers.enableOpusNacks = (sdpInput) => {\n  let sdp = sdpInput;\n  const sdpMatch = sdp.match(/a=rtpmap:(.*)opus.*\\r\\n/);\n  if (sdpMatch !== null) {\n    const theLine = `${sdpMatch[0]}a=rtcp-fb:${sdpMatch[1]}nack\\r\\n`;\n    sdp = sdp.replace(sdpMatch[0], theLine);\n  }\n\n  return sdp;\n};\n\nSdpHelpers.setParamForCodecs = (sdpInfo, mediaType, paramName, value) => {\n  sdpInfo.medias.forEach((mediaInfo) => {\n    if (mediaInfo.id === mediaType) {\n      mediaInfo.codecs.forEach((codec) => {\n        codec.setParam(paramName, value);\n      });\n    }\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SdpHelpers);\n\n\n//# sourceURL=webpack://Erizo/./src/utils/SdpHelpers.js?");

/***/ }),

/***/ "./src/views/AudioPlayer.js":
/*!**********************************!*\
  !*** ./src/views/AudioPlayer.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View */ \"./src/views/View.js\");\n/* harmony import */ var _Bar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bar */ \"./src/views/Bar.js\");\n/* global document */\n\n\n\n\n/*\n * AudioPlayer represents a Licode Audio component that shows either a local or a remote Audio.\n * Ex.: var player = AudioPlayer({id: id, stream: stream, elementID: elementID});\n * A AudioPlayer is also a View component.\n */\n\nconst AudioPlayer = (spec) => {\n  const that = Object(_View__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({});\n  let onmouseover;\n  let onmouseout;\n\n  // Variables\n\n  // AudioPlayer ID\n  that.id = spec.id;\n\n  // Stream that the AudioPlayer will play\n  that.stream = spec.stream.stream;\n\n  // DOM element in which the AudioPlayer will be appended\n  that.elementID = spec.elementID;\n\n\n  // Audio tag\n  that.audio = document.createElement('audio');\n  that.audio.setAttribute('id', `stream${that.id}`);\n  that.audio.setAttribute('class', 'licode_stream');\n  that.audio.setAttribute('style', 'width: 100%; height: 100%; position: absolute');\n  that.audio.setAttribute('autoplay', 'autoplay');\n\n  if (spec.stream.local) { that.audio.volume = 0; }\n\n  if (that.elementID !== undefined) {\n    // It will stop the AudioPlayer and remove it from the HTML\n    that.destroy = () => {\n      that.audio.pause();\n      that.parentNode.removeChild(that.div);\n    };\n\n    onmouseover = () => {\n      that.bar.display();\n    };\n\n    onmouseout = () => {\n      that.bar.hide();\n    };\n\n    // Container\n    that.div = document.createElement('div');\n    that.div.setAttribute('id', `player_${that.id}`);\n    that.div.setAttribute('class', 'licode_player');\n    that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; ' +\n                              'overflow: hidden;');\n\n    // Check for a passed DOM node.\n    if (typeof that.elementID === 'object' &&\n          typeof that.elementID.appendChild === 'function') {\n      that.container = that.elementID;\n    } else {\n      that.container = document.getElementById(that.elementID);\n    }\n    that.container.appendChild(that.div);\n\n    that.parentNode = that.div.parentNode;\n\n    that.div.appendChild(that.audio);\n\n    // Bottom Bar\n    if (spec.options.bar !== false) {\n      that.bar = Object(_Bar__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({ elementID: `player_${that.id}`,\n        id: that.id,\n        stream: spec.stream,\n        media: that.audio,\n        options: spec.options });\n\n      that.div.onmouseover = onmouseover;\n      that.div.onmouseout = onmouseout;\n    } else {\n      // Expose a consistent object to manipulate the media.\n      that.media = that.audio;\n    }\n  } else {\n    // It will stop the AudioPlayer and remove it from the HTML\n    that.destroy = () => {\n      that.audio.pause();\n      that.parentNode.removeChild(that.audio);\n    };\n\n    document.body.appendChild(that.audio);\n    that.parentNode = document.body;\n  }\n\n  that.audio.srcObject = that.stream;\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AudioPlayer);\n\n\n//# sourceURL=webpack://Erizo/./src/views/AudioPlayer.js?");

/***/ }),

/***/ "./src/views/Bar.js":
/*!**************************!*\
  !*** ./src/views/Bar.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View */ \"./src/views/View.js\");\n/* harmony import */ var _Speaker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Speaker */ \"./src/views/Speaker.js\");\n/* global document */\n\n\n\n\n/*\n * Bar represents the bottom menu bar of every mediaPlayer.\n * It contains a Speaker and an icon.\n * Every Bar is a View.\n * Ex.: var bar = Bar({elementID: element, id: id});\n */\nconst Bar = (spec) => {\n  const that = Object(_View__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({});\n  let waiting;\n\n  // Variables\n\n  // DOM element in which the Bar will be appended\n  that.elementID = spec.elementID;\n\n  // Bar ID\n  that.id = spec.id;\n\n  // Container\n  that.div = document.createElement('div');\n  that.div.setAttribute('id', `bar_${that.id}`);\n  that.div.setAttribute('class', 'licode_bar');\n\n  // Bottom bar\n  that.bar = document.createElement('div');\n  that.bar.setAttribute('style', 'width: 100%; height: 15%; max-height: 30px; ' +\n                                 'position: absolute; bottom: 0; right: 0; ' +\n                                 'background-color: rgba(255,255,255,0.62)');\n  that.bar.setAttribute('id', `subbar_${that.id}`);\n  that.bar.setAttribute('class', 'licode_subbar');\n\n  // Lynckia icon\n  that.link = document.createElement('a');\n  that.link.setAttribute('href', 'http://www.lynckia.com/');\n  that.link.setAttribute('class', 'licode_link');\n  that.link.setAttribute('target', '_blank');\n\n  that.logo = document.createElement('img');\n  that.logo.setAttribute('style', 'width: 100%; height: 100%; max-width: 30px; ' +\n                                  'position: absolute; top: 0; left: 2px;');\n  that.logo.setAttribute('class', 'licode_logo');\n  that.logo.setAttribute('alt', 'Lynckia');\n  that.logo.setAttribute('src', `${that.url}/assets/star.svg`);\n\n  // Private functions\n  const show = (displaying) => {\n    let action = displaying;\n    if (displaying !== 'block') {\n      action = 'none';\n    } else {\n      clearTimeout(waiting);\n    }\n\n    that.div.setAttribute('style',\n      `width: 100%; height: 100%; position: relative; bottom: 0; right: 0; display: ${action}`);\n  };\n\n  // Public functions\n  that.display = () => {\n    show('block');\n  };\n\n  that.hide = () => {\n    waiting = setTimeout(show, 1000);\n  };\n\n  document.getElementById(that.elementID).appendChild(that.div);\n  that.div.appendChild(that.bar);\n  that.bar.appendChild(that.link);\n  that.link.appendChild(that.logo);\n\n  // Speaker component\n  if (!spec.stream.screen && (spec.options === undefined ||\n                              spec.options.speaker === undefined ||\n                              spec.options.speaker === true)) {\n    that.speaker = Object(_Speaker__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({ elementID: `subbar_${that.id}`,\n      id: that.id,\n      stream: spec.stream,\n      media: spec.media });\n  }\n\n  that.display();\n  that.hide();\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bar);\n\n\n//# sourceURL=webpack://Erizo/./src/views/Bar.js?");

/***/ }),

/***/ "./src/views/Speaker.js":
/*!******************************!*\
  !*** ./src/views/Speaker.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View */ \"./src/views/View.js\");\n/* global document */\n\n\n\n/*\n * Speaker represents the volume icon that will be shown in the mediaPlayer, for example.\n * It manages the volume level of the media tag given in the constructor.\n * Every Speaker is a View.\n * Ex.: var speaker = Speaker({elementID: element, media: mediaTag, id: id});\n */\nconst Speaker = (spec) => {\n  const that = Object(_View__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({});\n  let lastVolume = 50;\n\n  const mute = () => {\n    that.media.muted = true;\n    that.icon.setAttribute('src', `${that.url}/assets/mute48.png`);\n    if (that.stream.local) {\n      that.stream.stream.getAudioTracks()[0].enabled = false;\n    } else {\n      lastVolume = that.picker.value;\n      that.picker.value = 0;\n      that.media.volume = 0;\n    }\n  };\n\n  const unmute = () => {\n    that.media.muted = false;\n    that.icon.setAttribute('src', `${that.url}/assets/sound48.png`);\n    if (that.stream.local) {\n      that.stream.stream.getAudioTracks()[0].enabled = true;\n    } else {\n      that.picker.value = lastVolume;\n      that.media.volume = that.picker.value / 100;\n    }\n  };\n\n  // Variables\n\n  // DOM element in which the Speaker will be appended\n  that.elementID = spec.elementID;\n\n  // media tag\n  that.media = spec.media;\n\n  // Speaker id\n  that.id = spec.id;\n\n  // MediaStream\n  that.stream = spec.stream;\n\n  // Container\n  that.div = document.createElement('div');\n  that.div.setAttribute('style', 'width: 40%; height: 100%; max-width: 32px; ' +\n                                   'position: absolute; right: 0;z-index:0;');\n\n  // Volume icon\n  that.icon = document.createElement('img');\n  that.icon.setAttribute('id', `volume_${that.id}`);\n  that.icon.setAttribute('src', `${that.url}/assets/sound48.png`);\n  that.icon.setAttribute('style', 'width: 80%; height: 100%; position: absolute;');\n  that.div.appendChild(that.icon);\n\n  that.icon.onclick = () => {\n    if (that.media.muted) {\n      unmute();\n    } else {\n      mute();\n    }\n  };\n\n  if (!that.stream.local) {\n    // Volume bar\n    that.picker = document.createElement('input');\n    that.picker.setAttribute('id', `picker_${that.id}`);\n    that.picker.type = 'range';\n    that.picker.min = 0;\n    that.picker.max = 100;\n    that.picker.step = 10;\n    that.picker.value = lastVolume;\n    //  FireFox supports range sliders as of version 23\n    that.picker.setAttribute('orient', 'vertical');\n    that.div.appendChild(that.picker);\n    that.media.volume = that.picker.value / 100;\n    that.media.muted = false;\n\n    that.picker.oninput = () => {\n      if (that.picker.value > 0) {\n        that.media.muted = false;\n        that.icon.setAttribute('src', `${that.url}/assets/sound48.png`);\n      } else {\n        that.media.muted = true;\n        that.icon.setAttribute('src', `${that.url}/assets/mute48.png`);\n      }\n      that.media.volume = that.picker.value / 100;\n    };\n\n    // Private functions\n    const show = (displaying) => {\n      that.picker.setAttribute('style', `background: transparent; width: 32px;\n                                         height: 100px; position: absolute; bottom: 90%;\n                                         z-index: 1; right: 0px; -webkit-appearance: slider-vertical;\n                                         bottom: ${that.div.offsetHeight}px; display: ${displaying}`);\n    };\n\n    // Public functions\n    that.div.onmouseover = () => {\n      show('block');\n    };\n\n    that.div.onmouseout = () => {\n      show('none');\n    };\n\n    show('none');\n  }\n\n  document.getElementById(that.elementID).appendChild(that.div);\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Speaker);\n\n\n//# sourceURL=webpack://Erizo/./src/views/Speaker.js?");

/***/ }),

/***/ "./src/views/VideoPlayer.js":
/*!**********************************!*\
  !*** ./src/views/VideoPlayer.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View */ \"./src/views/View.js\");\n/* harmony import */ var _Bar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bar */ \"./src/views/Bar.js\");\n/* global document */\n\n\n\n\n/*\n * VideoPlayer represents a Licode video component that shows either a local or a remote video.\n * Ex.: var player = VideoPlayer({id: id, stream: stream, elementID: elementID});\n * A VideoPlayer is also a View component.\n */\nconst VideoPlayer = (spec) => {\n  const that = Object(_View__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({});\n\n  // Variables\n\n  // VideoPlayer ID\n  that.id = spec.id;\n\n  // Stream that the VideoPlayer will play\n  that.stream = spec.stream.stream;\n\n  // DOM element in which the VideoPlayer will be appended\n  that.elementID = spec.elementID;\n\n  // Private functions\n  const onmouseover = () => {\n    that.bar.display();\n  };\n\n  const onmouseout = () => {\n    that.bar.hide();\n  };\n\n  // Public functions\n\n  // It will stop the VideoPlayer and remove it from the HTML\n  that.destroy = () => {\n    that.video.pause();\n    that.parentNode.removeChild(that.div);\n  };\n\n  /* window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n      document.getElementById(key).value = unescape(value);\n  }); */\n\n  // Container\n  that.div = document.createElement('div');\n  that.div.setAttribute('id', `player_${that.id}`);\n  that.div.setAttribute('class', 'licode_player');\n  that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; ' +\n                                   'background-color: black; overflow: hidden;');\n\n  // Loader icon\n  if (spec.options.loader !== false) {\n    that.loader = document.createElement('img');\n    that.loader.setAttribute('style', 'width: 16px; height: 16px; position: absolute; ' +\n                                        'top: 50%; left: 50%; margin-top: -8px; margin-left: -8px');\n    that.loader.setAttribute('id', `back_${that.id}`);\n    that.loader.setAttribute('class', 'licode_loader');\n    that.loader.setAttribute('src', `${that.url}/assets/loader.gif`);\n  }\n\n  // Video tag\n  that.video = document.createElement('video');\n  that.video.setAttribute('id', `stream${that.id}`);\n  that.video.setAttribute('class', 'licode_stream');\n  that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute; object-fit: cover');\n  that.video.setAttribute('autoplay', 'autoplay');\n  that.video.setAttribute('playsinline', 'playsinline');\n\n  if (spec.stream.local) { that.video.volume = 0; }\n\n  if (that.elementID !== undefined) {\n    // Check for a passed DOM node.\n    if (typeof that.elementID === 'object' &&\n          typeof that.elementID.appendChild === 'function') {\n      that.container = that.elementID;\n    } else {\n      that.container = document.getElementById(that.elementID);\n    }\n  } else {\n    that.container = document.body;\n  }\n  that.container.appendChild(that.div);\n\n  that.parentNode = that.div.parentNode;\n\n  if (that.loader) {\n    that.div.appendChild(that.loader);\n  }\n  that.div.appendChild(that.video);\n\n  that.containerWidth = 0;\n  that.containerHeight = 0;\n\n  // Bottom Bar\n  if (spec.options.bar !== false) {\n    that.bar = Object(_Bar__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({ elementID: `player_${that.id}`,\n      id: that.id,\n      stream: spec.stream,\n      media: that.video,\n      options: spec.options });\n\n    that.div.onmouseover = onmouseover;\n    that.div.onmouseout = onmouseout;\n  } else {\n    // Expose a consistent object to manipulate the media.\n    that.media = that.video;\n  }\n\n  that.video.srcObject = that.stream;\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (VideoPlayer);\n\n\n//# sourceURL=webpack://Erizo/./src/views/VideoPlayer.js?");

/***/ }),

/***/ "./src/views/View.js":
/*!***************************!*\
  !*** ./src/views/View.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Events */ \"./src/Events.js\");\n/*\n * View class represents a HTML component\n * Every view is an EventDispatcher.\n */\n\n\n\nconst View = () => {\n  const that = Object(_Events__WEBPACK_IMPORTED_MODULE_0__[\"EventDispatcher\"])({});\n\n  // Variables\n\n  // URL where it will look for icons and assets\n  that.url = '';\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (View);\n\n\n//# sourceURL=webpack://Erizo/./src/views/View.js?");

/***/ }),

/***/ "./src/webrtc-stacks/BaseStack.js":
/*!****************************************!*\
  !*** ./src/webrtc-stacks/BaseStack.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Logger */ \"./src/utils/Logger.js\");\n/* global RTCIceCandidate, RTCPeerConnection */\n\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].module('BaseStack');\n\nconst BaseStack = (specInput) => {\n  const that = {};\n  const specBase = specInput;\n\n  const logs = [];\n  const logSDP = (...message) => {\n    logs.push(['Negotiation:', ...message].reduce((a, b) => `${a} ${b}`));\n  };\n  that.getNegotiationLogs = () => logs.reduce((a, b) => `${a}'\\n'${b}`);\n\n  log.debug(`message: Starting Base stack, spec: ${JSON.stringify(specBase)}`);\n\n  that.pcConfig = {\n    iceServers: [],\n    sdpSemantics: 'unified-plan',\n  };\n\n  that.con = {};\n  if (specBase.iceServers !== undefined) {\n    that.pcConfig.iceServers = specBase.iceServers;\n  }\n  if (specBase.forceTurn === true) {\n    that.pcConfig.iceTransportPolicy = 'relay';\n  }\n  that.pcConfig.bundlePolicy = 'max-bundle';\n\n  that.peerConnection = new RTCPeerConnection(that.pcConfig, that.con);\n\n  that.peerConnection.onnegotiationneeded = async () => {\n    // This is for testing the negotiation step by step\n    if (specInput.managed) {\n      return;\n    }\n    try {\n      await that.peerConnection.setLocalDescription();\n      specBase.callback({\n        type: that.peerConnection.localDescription.type,\n        sdp: that.peerConnection.localDescription.sdp,\n      });\n    } catch (e) {\n      logSDP('onnegotiationneeded - error', e.message);\n    }\n  };\n\n  const onIceCandidate = (event) => {\n    let candidateObject = {};\n    const candidate = event.candidate;\n    if (!candidate) {\n      log.debug('message: Gathered all candidates and sending END candidate');\n      candidateObject = {\n        sdpMLineIndex: -1,\n        sdpMid: 'end',\n        candidate: 'end',\n      };\n    } else {\n      candidateObject = {\n        sdpMLineIndex: candidate.sdpMLineIndex,\n        sdpMid: candidate.sdpMid,\n        candidate: candidate.candidate,\n      };\n      if (!candidateObject.candidate.match(/a=/)) {\n        candidateObject.candidate = `a=${candidateObject.candidate}`;\n      }\n    }\n\n    specBase.callback({ type: 'candidate', candidate: candidateObject });\n  };\n\n  // Peerconnection events\n  that.peerConnection.onicecandidate = onIceCandidate;\n\n  // public functions\n\n  that.setStartVideoBW = (sdpInput) => {\n    log.error('message: startVideoBW not implemented for this browser');\n    return sdpInput;\n  };\n\n  that.setHardMinVideoBW = (sdpInput) => {\n    log.error('message: hardMinVideoBw not implemented for this browser');\n    return sdpInput;\n  };\n\n  that.updateSpec = (configInput, streamId) => {\n    const config = configInput;\n    const shouldSendMaxVideoBWInOptions = !specBase.p2p && config.maxVideoBW;\n    if (shouldSendMaxVideoBWInOptions ||\n        config.minVideoBW ||\n        (config.slideShowMode !== undefined) ||\n        (config.muteStream !== undefined) ||\n        (config.qualityLayer !== undefined) ||\n        (config.slideShowBelowLayer !== undefined) ||\n        (config.video !== undefined) ||\n        (config.priorityLevel !== undefined)) {\n      log.debug(`message: Configuration changed, maxVideoBW: ${config.maxVideoBW}` +\n        `, minVideoBW: ${config.minVideoBW}, slideShowMode: ${config.slideShowMode}` +\n        `, muteStream: ${JSON.stringify(config.muteStream)}, videoConstraints: ${JSON.stringify(config.video)}` +\n        `, slideShowBelowMinLayer: ${config.slideShowBelowLayer}` +\n        `, priority: ${config.priorityLevel}`);\n      specBase.callback({ type: 'updatestream', config }, streamId);\n    }\n  };\n\n  that.addStream = (streamInput) => {\n    const nativeStream = streamInput.stream;\n    nativeStream.transceivers = [];\n    nativeStream.getTracks().forEach(async (track) => {\n      let options = {};\n      if (track.kind === 'video') {\n        options = {\n          sendEncodings: streamInput.generateEncoderParameters(),\n        };\n      }\n      options.streams = [nativeStream];\n      const transceiver = that.peerConnection.addTransceiver(track, options);\n      nativeStream.transceivers.push(transceiver);\n    });\n  };\n\n  that.removeStream = (nativeStream) => {\n    nativeStream.transceivers.forEach((transceiver) => {\n      log.debug('Stopping transceiver', transceiver);\n      // Don't remove the tagged m section, which is the first one (mid=0).\n      if (transceiver.mid === '0') {\n        that.peerConnection.removeTrack(transceiver.sender);\n      } else {\n        transceiver.stop();\n      }\n    });\n  };\n\n  that.close = () => {\n    that.peerConnection.close();\n  };\n\n  that.setLocalDescription = async () => that.peerConnection.setLocalDescription();\n\n  that.getLocalDescription = async () => that.peerConnection.localDescription.sdp;\n\n  that.setRemoteDescription = async (description) => {\n    await that.peerConnection.setRemoteDescription(description);\n  };\n\n\n  that.processSignalingMessage = async (msgInput) => {\n    const msg = msgInput;\n    logSDP('processSignalingMessage, type: ', msgInput.type);\n    if (msgInput.type === 'candidate') {\n      let obj;\n      if (typeof (msg.candidate) === 'object') {\n        obj = msg.candidate;\n      } else {\n        obj = JSON.parse(msg.candidate);\n      }\n      if (obj.candidate === 'end') {\n        // ignore the end candidate for chrome\n        return;\n      }\n      obj.candidate = obj.candidate.replace(/a=/g, '');\n      obj.sdpMLineIndex = parseInt(obj.sdpMLineIndex, 10);\n      const candidate = new RTCIceCandidate(obj);\n      that.peerConnection.addIceCandidate(candidate);\n    } else if (msgInput.type === 'error') {\n      log.error(`message: Received error signaling message, state: ${msgInput.previousType}`);\n    } else if (['offer', 'answer'].indexOf(msgInput.type) !== -1) {\n      try {\n        await that.peerConnection.setRemoteDescription(msg);\n        if (msg.type === 'offer') {\n          await that.peerConnection.setLocalDescription();\n          specBase.callback({\n            type: that.peerConnection.localDescription.type,\n            sdp: that.peerConnection.localDescription.sdp,\n          });\n        }\n      } catch (e) {\n        log.error('message: Error during negotiation, message: ', e.message);\n        if (msg.type === 'offer') {\n          specBase.callback({\n            type: 'offer-error',\n            sdp: that.peerConnection.localDescription.sdp,\n          });\n        }\n      }\n    }\n  };\n\n  that.restartIce = () => {\n    that.peerConnection.restartIce();\n    that.peerConnection.onnegotiationneeded();\n  };\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseStack);\n\n\n//# sourceURL=webpack://Erizo/./src/webrtc-stacks/BaseStack.js?");

/***/ }),

/***/ "./src/webrtc-stacks/ChromeStableStack.js":
/*!************************************************!*\
  !*** ./src/webrtc-stacks/ChromeStableStack.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _BaseStack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseStack */ \"./src/webrtc-stacks/BaseStack.js\");\n/* harmony import */ var _utils_SdpHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils/SdpHelpers */ \"./src/utils/SdpHelpers.js\");\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Logger */ \"./src/utils/Logger.js\");\n\n\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"].module('ChromeStableStack');\n\nconst ChromeStableStack = (specInput) => {\n  log.debug(`message: Starting Chrome stable stack, spec: ${JSON.stringify(specInput)}`);\n  const spec = specInput;\n  const that = Object(_BaseStack__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(specInput);\n  that.mediaConstraints = {\n    offerToReceiveVideo: true,\n    offerToReceiveAudio: true,\n  };\n\n  that.prepareCreateOffer = () => Promise.resolve();\n\n  that.setStartVideoBW = (sdpInfo) => {\n    if (that.video && spec.startVideoBW) {\n      log.debug(`message: startVideoBW, requested: ${spec.startVideoBW}`);\n      _utils_SdpHelpers__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setParamForCodecs(sdpInfo, 'video', 'x-google-start-bitrate', spec.startVideoBW);\n    }\n  };\n\n  that.setHardMinVideoBW = (sdpInfo) => {\n    if (that.video && spec.hardMinVideoBW) {\n      log.debug(`message: hardMinVideoBW, requested: ${spec.hardMinVideoBW}`);\n      _utils_SdpHelpers__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setParamForCodecs(sdpInfo, 'video', 'x-google-min-bitrate', spec.hardMinVideoBW);\n    }\n  };\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChromeStableStack);\n\n\n//# sourceURL=webpack://Erizo/./src/webrtc-stacks/ChromeStableStack.js?");

/***/ }),

/***/ "./src/webrtc-stacks/FcStack.js":
/*!**************************************!*\
  !*** ./src/webrtc-stacks/FcStack.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Logger */ \"./src/utils/Logger.js\");\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].module('FcStack');\nconst FcStack = (spec) => {\n  /*\n  spec.callback({\n      type: sessionDescription.type,\n      sdp: sessionDescription.sdp\n  });\n  */\n  const that = {};\n\n  that.pcConfig = {};\n\n  that.peerConnection = {};\n  that.desc = {};\n  that.signalCallback = undefined;\n\n  that.close = () => {\n    log.debug('message: Close FcStack');\n  };\n\n  that.createOffer = () => {\n    log.debug('message: CreateOffer');\n  };\n\n  that.addStream = (stream) => {\n    log.debug(`message: addStream, ${stream.toLog()}`);\n  };\n\n  that.processSignalingMessage = (msg) => {\n    log.debug(`message: processSignaling, message: ${msg}`);\n    if (that.signalCallback !== undefined) { that.signalCallback(msg); }\n  };\n\n  that.sendSignalingMessage = (msg) => {\n    log.debug(`message: Sending signaling Message, message: ${msg}`);\n    spec.callback(msg);\n  };\n\n  that.setSignalingCallback = (callback = () => {}) => {\n    log.debug('message: Setting signalling callback');\n    that.signalCallback = callback;\n  };\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FcStack);\n\n\n//# sourceURL=webpack://Erizo/./src/webrtc-stacks/FcStack.js?");

/***/ }),

/***/ "./src/webrtc-stacks/FirefoxStack.js":
/*!*******************************************!*\
  !*** ./src/webrtc-stacks/FirefoxStack.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Logger */ \"./src/utils/Logger.js\");\n/* harmony import */ var _BaseStack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseStack */ \"./src/webrtc-stacks/BaseStack.js\");\n\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].module('FirefoxStack');\n\n\nconst FirefoxStack = (specInput) => {\n  log.debug('message: Starting Firefox stack');\n  const that = Object(_BaseStack__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(specInput);\n\n  that.addStream = (streamInput) => {\n    const nativeStream = streamInput.stream;\n    nativeStream.transceivers = [];\n    nativeStream.getTracks().forEach(async (track) => {\n      let options = {};\n      if (track.kind === 'video' && streamInput.simulcast) {\n        options = {\n          sendEncodings: [],\n        };\n      }\n      options.streams = [nativeStream];\n      const transceiver = that.peerConnection.addTransceiver(track, options);\n      nativeStream.transceivers.push(transceiver);\n      const parameters = transceiver.sender.getParameters() || {};\n      parameters.encodings = streamInput.generateEncoderParameters();\n      return transceiver.sender.setParameters(parameters);\n    });\n  };\n\n  that.prepareCreateOffer = () => Promise.resolve();\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FirefoxStack);\n\n\n//# sourceURL=webpack://Erizo/./src/webrtc-stacks/FirefoxStack.js?");

/***/ }),

/***/ "./src/webrtc-stacks/SafariStack.js":
/*!******************************************!*\
  !*** ./src/webrtc-stacks/SafariStack.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Logger */ \"./src/utils/Logger.js\");\n/* harmony import */ var _ChromeStableStack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChromeStableStack */ \"./src/webrtc-stacks/ChromeStableStack.js\");\n\n\n\nconst log = _utils_Logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].module('SafariStack');\nconst SafariStack = (specInput) => {\n  log.debug('message: Starting Safari stack');\n  const that = Object(_ChromeStableStack__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(specInput);\n\n  that._updateTracksToBeNegotiatedFromStream = () => {\n    that.tracksToBeNegotiated += 1;\n  };\n\n  return that;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SafariStack);\n\n\n//# sourceURL=webpack://Erizo/./src/webrtc-stacks/SafariStack.js?");

/***/ }),

/***/ 0:
/*!********************!*\
  !*** ws (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://Erizo/ws_(ignored)?");

/***/ })

/******/ })["default"];
});